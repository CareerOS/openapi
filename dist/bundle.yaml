openapi: 3.1.0
info:
  title: CareerOS API
  description: |
    # Welcome to the CareerOS API

    The CareerOS API is a comprehensive, modern RESTful API platform designed for career development and student success.
    Our API-first architecture enables universities, career centers, and integration partners to build exceptional
    experiences for students, advisors, and employers.

    ## üöÄ Quick Start

    **New to CareerOS?** Get started in minutes:
    1. Authenticate using JWT tokens ([Authentication Guide](./AUTHENTICATION.md))
    2. Make your first API call to `/api/v1/users/self`
    3. Explore our comprehensive endpoint documentation below

    ## üìö API Organization

    ### Core API Versions
    - **Public API V1** (`/public/v1/*`) - Public endpoints for discovery and authentication (no auth required)
    - **API V1** (`/api/v1/*`) - Main authenticated API with 100+ endpoints for students and advisors
    - **API V2** (`/api/v2/*`) - Enhanced career advisor tools with advanced analytics
    - **Webhook API** (`/webhook/*`) - Real-time notifications from external services

    ### Feature Modules

    **Stable Modules:**
    - **Resume OS** - AI-powered resume building, scoring, and review workflow
    - **EventOS** - Career event discovery, registration, and calendar integration
    - **AlumniOS** - Alumni networking and mentorship connections
    - **Jobs & Companies** - Advanced search, tracking, and application management
    - **AI Features** - Intelligent job extraction and content analysis
    - **CalendarOS** - Complete appointment scheduling with confirmation and attendance tracking
    - **Agreements** - Three-way internship agreement management with electronic signatures
    - **Employers** - Employer registration, profile management, and team collaboration
    - **Custom Fields** - Institution-specific field definitions and dropdown management

    **PROPOSAL:**
    - **Reports API** - Comprehensive analytics with multi-format export (JSON, CSV, PDF)
      > üí° We're actively seeking partner feedback to refine reporting capabilities!

    ## üéØ Key Capabilities

    ### For Students
    - Search jobs, companies, and events
    - Build and score resumes with AI
    - Track applications and networking
    - Connect with alumni mentors
    - Schedule advisor appointments
    - Access personal progress reports

    ### For Career Advisors
    - View student progress across cohorts
    - AI-generated student summaries
    - Manage appointment scheduling
    - Access cohort-level analytics
    - Track engagement metrics
    - Export comprehensive reports

    ### For Administrators
    - Configure custom fields for all entities
    - Manage dropdown values
    - Oversee internship agreement workflows
    - Handle employer registration and onboarding
    - Access university-wide analytics

    ### For Integration Partners
    - API key authentication for server-to-server
    - Webhook support for real-time updates
    - ATS integrations (Greenhouse, Lever, Workday, Taleo)
    - Calendar integrations (Google, Outlook)

    ## üîê Authentication

    CareerOS supports multiple authentication methods:
    - **JWT Bearer Tokens** (Auth0) - For student and advisor applications
    - **API Keys** - For integration partners and webhooks

    See our [Authentication Guide](./AUTHENTICATION.md) for detailed implementation.

    ## üìñ Documentation Resources

    - **[Getting Started Guide](./GETTING_STARTED.md)** - Step-by-step onboarding with code examples
    - **[Authentication Guide](./AUTHENTICATION.md)** - Security, tokens, and best practices
    - **[API Improvements Summary](./API_IMPROVEMENTS_SUMMARY.md)** - Why CareerOS stands out
    - **OpenAPI Specification** - Complete machine-readable API documentation (this document)

    ## üí¨ BETA Features & Feedback

    Several advanced features are in **BETA** status. These are fully functional and production-ready,
    but may evolve based on partner feedback:

    - **CalendarOS** - Appointment scheduling and calendar management
    - **Agreements API** - Internship agreement workflow
    - **Employers API** - Employer onboarding and management
    - **Custom Fields API** - Institution-specific extensions

    **We welcome your feedback!**
    - Technical feedback: api-feedback@thecareeros.com
    - Feature requests: product@thecareeros.com
    - Integration support: api-support@thecareeros.com

    ## üåü What Makes CareerOS Different

    ‚úÖ **Comprehensive** - 100+ endpoints covering the complete career development lifecycle
    ‚úÖ **Modern** - Built on OpenAPI 3.1.0 with industry-standard practices
    ‚úÖ **Intelligent** - AI-powered resume scoring, job extraction, and student insights
    ‚úÖ **Flexible** - Custom fields and dropdown values for institution-specific needs
    ‚úÖ **Integrated** - ATS and calendar integrations out of the box
    ‚úÖ **Developer-Friendly** - Extensive documentation, code examples, and responsive support
    ‚úÖ **Production-Ready** - Stable API with clear versioning and deprecation policies

    ## üìä API Statistics

    - **100+ Total Endpoints**
    - **9 Feature Modules** (5 stable, 4 BETA, 1 proposal)
    - **Multi-Format Exports** (JSON, CSV, PDF)
    - **Real-Time Capabilities** (WebSockets, Webhooks)
    - **Enterprise Integrations** (ATS, Calendar, SSO)

    ## üö¶ Rate Limits

    | Endpoint Type | Rate Limit | Window |
    |---------------|------------|--------|
    | Public API | 100 requests | 1 minute |
    | Authenticated API | 300 requests | 1 minute |
    | Search Endpoints | 60 requests | 1 minute |
    | Advisor V2 API | 500 requests | 1 minute |

    ## üîó Learn More

    - **Website**: [https://thecareeros.com](https://thecareeros.com)
    - **API Support**: api-support@thecareeros.com
    - **Status Page**: https://status.thecareeros.com
    - **API Feedback**: api-feedback@thecareeros.com

    ---

    and make your first API call today! üöÄ
  contact:
    name: CareerOS API Support
    email: oleksii@thecareeros.com
    url: https://thecareeros.com
  version: 2.0.0
  license:
    name: CareerOS internal usage license
    url: https://github.com/CareerOS/openapi/blob/main/LICENSE_TCOS
servers:
  - url: https://api.thecareeros.com
    description: Production server
security:
  - BearerAuth: []
tags:
  - name: Public
    description: Public endpoints (no authentication required)
  - name: Users
    description: User profile and account management
  - name: Companies
    description: Company search, profiles, and management
  - name: Jobs
    description: Job search, saved jobs, and applications
  - name: Contacts
    description: Professional contacts and networking
  - name: Applications
    description: Job application tracking and management
  - name: Resume
    description: Resume creation, editing, and management (Resume OS module)
  - name: Events
    description: |
      Event discovery, registration, and management (EventOS module).

      EventOS provides comprehensive event management including career fairs,
      networking events, workshops, and employer presentations. Features include
      event search, registration, speaker information, and calendar integration.
  - name: Universities
    description: University and cohort management
  - name: Alumni
    description: |
      Alumni networking and directory (AlumniOS module).

      AlumniOS connects current students with successful alumni for mentorship,
      networking, and career guidance. Search alumni by cohort, university, or
      industry to build valuable professional connections.
  - name: Advisor
    description: Career advisor-specific endpoints
  - name: AI
    description: AI-powered features and insights
  - name: Webhooks
    description: Webhook endpoints for external services
  - name: Reports (PROPOSAL)
    description: |
      **[PROPOSAL]** Comprehensive reporting and analytics endpoints.

      Unified reporting API providing student activity reports, progress tracking,
      and cohort-level analytics. Supports multiple export formats (JSON, CSV, PDF)
      for integration with institutional systems and stakeholder reporting.
  - name: CalendarOS
    description: |
      Appointment scheduling and calendar management (CalendarOS module).

      CalendarOS provides a complete appointment booking workflow including availability
      checking, appointment creation, confirmation, attendance tracking, and calendar
      management. Supports both student-initiated and advisor-initiated scheduling with
      email confirmations, meeting platform integration, and comprehensive scheduling analytics.
  - name: Agreements
    description: |
      Three-way internship agreement management system.

       Comprehensive workflow for creating, signing, and managing internship agreements between
       students, employers, and universities. Features include electronic signatures from all
       three parties, agreement modification with signature reset, notification system for all
       parties, complete audit trail, and document management. Supports the full lifecycle from
       draft creation through execution and completion.
  - name: Employers
    description: |
      Employer registration and organization management.

      Complete employer onboarding and management system including organization registration,
      profile management, multi-user access control, and account settings. Enables employers to
      register their organization, add team members with role-based permissions, manage company
      branding and public profile, configure notification preferences, and set up integrations
      with ATS and calendar systems. Supports the full employer lifecycle from initial registration
      through ongoing account management.
  - name: Custom Fields (BETA)
    description: |
      **[BETA]** Flexible custom field system with optional metadata management.

      **How It Works:**
      All major entities (students, jobs, companies, applications, events, contacts, agreements, employers,
      appointments, resumes, alumni) support arbitrary custom fields out of the box. Simply include any
      key-value pair in your API requests and they will be automatically stored and returned in the
      `custom_fields` object. No pre-definition required!

      **Example - Just Works:**
      ```json
      POST /api/v1/users/self/profile
      {
        "first_name": "Maria",
        "last_name": "Garcia",
        "esade_program_track": "mba_fulltime",
        "preferred_industry": "consulting"
      }
      ```

      **Optional Metadata API:**
      The Custom Fields API endpoints (`/api/v1/custom-fields/*`) are **optional** and provide metadata
      management for UI display labels, validation rules, and visibility controls. Use these
      endpoints when you need structured definitions for forms, but skip them if you just want to store
      arbitrary data.
paths:
  /webhook/documents/scan-results:
    post:
      tags:
        - Webhooks
      summary: Receive document scan results
      description: Webhook endpoint to receive scan results from document scanning service
      operationId: handleDocumentScanResult
      security:
        - ApiKeyAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - document_id
                - status
              properties:
                document_id:
                  type: string
                  format: uuid
                  description: ID of the scanned document
                status:
                  type: string
                  enum:
                    - clean
                    - infected
                    - error
                  description: Scan result status
                threat_details:
                  type: object
                  description: Details if threats were found
                  properties:
                    threats:
                      type: array
                      items:
                        type: string
                    severity:
                      type: string
                      enum:
                        - low
                        - medium
                        - high
                        - critical
      responses:
        '200':
          description: Webhook processed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  received:
                    type: boolean
                    example: true
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /public/v1/universities:
    get:
      tags:
        - Public
        - Universities
      summary: Get universities
      description: Get all enrolled universities
      operationId: getUniversities
      security: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    name:
                      type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /public/v1/universities/{universityID}/providers:
    get:
      tags:
        - Public
        - Providers
      summary: Get providers supported by the university
      description: Get providers supported by the university
      operationId: getUniversityProviders
      security: []
      parameters:
        - in: path
          name: universityID
          description: ID of the university
          required: true
          schema:
            type: string
            format: uuid
            example: 482ecaf0-e532-4285-85a1-3f22cb86d25f
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /public/v1/universities/{universityID}/providers/{providerName}:
    get:
      tags:
        - Public
        - Providers
      summary: Get supported domain list for selected university login provider
      description: Get supported domain list for selected university login provider
      operationId: getUniversityProviderDomains
      security: []
      parameters:
        - in: path
          name: universityID
          description: ID of the university
          required: true
          schema:
            type: string
            format: uuid
            example: 5154fae1-5c0b-470e-90d8-3f7c399ca502
        - in: path
          name: providerName
          description: Name of the supported provider
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/users/self:
    get:
      tags:
        - Users
      summary: Get self user info
      description: |
        Returns the current user's profile information.

        **Custom Fields Support:** This endpoint returns any custom fields that have been set for the user.
        Custom fields are institution-specific key-value pairs that can be added without modifying the API schema.
      operationId: getSelfUserInfo
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/users/self/profile:
    get:
      tags:
        - Users
      summary: Get user profile
      description: |
        Retrieve the authenticated user's profile information.

        **Custom Fields Support:** This endpoint returns any custom fields that have been set for the user profile.
      operationId: getUserProfile
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    put:
      tags:
        - Users
      summary: Update user profile
      description: |
        Update the authenticated user's profile information.

        **Custom Fields Support:** You can include arbitrary custom fields in the request body.
        Any fields not part of the standard schema will be stored and returned in the `custom_fields` object.

        Example:
        ```json
        {
          "first_name": "Maria",
          "last_name": "Garcia",
          "esade_program_track": "mba_fulltime",
          "preferred_industry": "consulting"
        }
        ```
      operationId: updateUserProfile
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    patch:
      tags:
        - Users
      summary: Partially update user profile
      description: Update specific fields of the authenticated user's profile
      operationId: patchUserProfile
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                headline:
                  type: string
                bio:
                  type: string
                location:
                  type: string
                linkedin_url:
                  type: string
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /api/v1/users/self/appointments:
    get:
      tags:
        - Users
      summary: Get student appointments
      description: Retrieve appointments for the logged-in student
      operationId: getStudentAppointments
      security:
        - BearerAuth: []
      parameters:
        - name: status
          in: query
          description: Filter by appointment status
          schema:
            type: string
            enum:
              - scheduled
              - completed
              - cancelled
              - no_show
        - name: upcoming_only
          in: query
          description: Show only upcoming appointments
          schema:
            type: boolean
            default: false
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: Appointments retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  appointments:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        advisor:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            name:
                              type: string
                            title:
                              type: string
                            profile_picture:
                              type: string
                              format: uri
                              nullable: true
                        scheduled_at:
                          type: string
                          format: date-time
                        duration_minutes:
                          type: integer
                        type:
                          type: string
                          enum:
                            - career_counseling
                            - resume_review
                            - mock_interview
                            - general
                            - other
                        status:
                          type: string
                          enum:
                            - scheduled
                            - completed
                            - cancelled
                            - no_show
                        location:
                          type: string
                          nullable: true
                        student_notes:
                          type: string
                          nullable: true
                        created_at:
                          type: string
                          format: date-time
                  total:
                    type: integer
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    post:
      tags:
        - Users
      summary: Request appointment
      description: Request a new appointment with an advisor
      operationId: requestAppointment
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - advisor_id
                - preferred_date
                - type
              properties:
                advisor_id:
                  type: string
                  format: uuid
                  description: ID of the advisor to book with
                preferred_date:
                  type: string
                  format: date-time
                  description: Preferred appointment time
                type:
                  type: string
                  enum:
                    - career_counseling
                    - resume_review
                    - mock_interview
                    - general
                    - other
                student_notes:
                  type: string
                  description: Student's reason for appointment or topics to discuss
      responses:
        '201':
          description: Appointment request created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  advisor_id:
                    type: string
                    format: uuid
                  scheduled_at:
                    type: string
                    format: date-time
                  status:
                    type: string
                    example: scheduled
                  created_at:
                    type: string
                    format: date-time
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /api/v1/users/self/reports/activity:
    get:
      tags:
        - Users
      summary: Get student activity report
      description: |
        Retrieve comprehensive activity report for the logged-in student.

        This report includes metrics on applications, job searches, networking activities,
        events, and resume development. Support for multiple export formats (JSON, CSV, PDF)
        enables integration with external analytics tools and provides flexibility for
        reporting workflows.
      operationId: getStudentActivityReport
      security:
        - BearerAuth: []
      parameters:
        - name: start_date
          in: query
          description: Start date for report period (defaults to 30 days ago if not specified)
          schema:
            type: string
            format: date
          example: '2025-09-01'
        - name: end_date
          in: query
          description: End date for report period (defaults to today if not specified)
          schema:
            type: string
            format: date
          example: '2025-10-15'
        - name: format
          in: query
          description: Response format for the report
          schema:
            type: string
            enum:
              - json
              - csv
              - pdf
            default: json
          example: json
        - name: include_timeline
          in: query
          description: Include daily activity timeline in response (JSON format only)
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Activity report retrieved successfully
          headers:
            Content-Disposition:
              description: Attachment header for CSV and PDF formats
              schema:
                type: string
              example: attachment; filename=activity_report_2025-10-15.csv
          content:
            application/json:
              schema:
                type: object
                properties:
                  period:
                    type: object
                    properties:
                      start_date:
                        type: string
                        format: date
                      end_date:
                        type: string
                        format: date
                  summary:
                    type: object
                    properties:
                      applications_submitted:
                        type: integer
                        description: Total applications submitted
                      jobs_saved:
                        type: integer
                        description: Total jobs saved
                      companies_researched:
                        type: integer
                        description: Total companies viewed
                      contacts_added:
                        type: integer
                        description: Total contacts added
                      events_attended:
                        type: integer
                        description: Total events registered for
                      resumes_created:
                        type: integer
                        description: Total resumes created
                      advisor_meetings:
                        type: integer
                        description: Total advisor appointments
                  applications_by_status:
                    type: object
                    properties:
                      saved:
                        type: integer
                      applied:
                        type: integer
                      interviewing:
                        type: integer
                      offered:
                        type: integer
                      rejected:
                        type: integer
                      accepted:
                        type: integer
                  activity_timeline:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                        activities:
                          type: integer
                          description: Number of activities on this date
                  top_companies:
                    type: array
                    description: Most frequently interacted companies
                    items:
                      type: object
                      properties:
                        company_id:
                          type: string
                          format: uuid
                        company_name:
                          type: string
                        interactions:
                          type: integer
            text/csv:
              schema:
                type: string
                format: binary
              example: |
                Period,Start Date,End Date
                Report Period,2025-09-01,2025-10-15

                Metric,Count
                Applications Submitted,15
                Jobs Saved,42
                Companies Researched,28
                Contacts Added,12
                Events Attended,5
                Resumes Created,3
                Advisor Meetings,2
            application/pdf:
              schema:
                type: string
                format: binary
                description: PDF formatted activity report with charts and visualizations
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /api/v1/users/self/reports/progress:
    get:
      tags:
        - Users
      summary: Get career progress report
      description: |
        Retrieve career development progress tracking for the logged-in student.

        This report provides insights into overall career readiness, milestone completion,
        skills development, and personalized recommendations for next steps. Supports
        multiple export formats (JSON, CSV, PDF) for sharing progress with advisors
        or integrating with portfolio systems.
      operationId: getStudentProgressReport
      security:
        - BearerAuth: []
      parameters:
        - name: format
          in: query
          description: Response format for the report
          schema:
            type: string
            enum:
              - json
              - csv
              - pdf
            default: json
          example: json
        - name: include_recommendations
          in: query
          description: Include personalized recommendations in response
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Progress report retrieved successfully
          headers:
            Content-Disposition:
              description: Attachment header for CSV and PDF formats
              schema:
                type: string
              example: attachment; filename=progress_report_2025-10-15.pdf
          content:
            application/json:
              schema:
                type: object
                properties:
                  overall_progress:
                    type: object
                    properties:
                      completion_percentage:
                        type: integer
                        minimum: 0
                        maximum: 100
                        description: Overall career readiness score
                      milestones_completed:
                        type: integer
                      total_milestones:
                        type: integer
                  milestones:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                          example: Create resume
                        category:
                          type: string
                          enum:
                            - resume
                            - networking
                            - applications
                            - events
                            - skills
                        completed:
                          type: boolean
                        completed_at:
                          type: string
                          format: date-time
                          nullable: true
                        description:
                          type: string
                  skills_development:
                    type: object
                    properties:
                      resume_score:
                        type: integer
                        minimum: 0
                        maximum: 100
                        nullable: true
                      networking_strength:
                        type: string
                        enum:
                          - beginner
                          - developing
                          - proficient
                          - advanced
                      application_readiness:
                        type: string
                        enum:
                          - not_ready
                          - getting_ready
                          - ready
                          - highly_prepared
                  recommendations:
                    type: array
                    description: Personalized recommendations for next steps
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          example: Attend a career fair
                        description:
                          type: string
                        priority:
                          type: string
                          enum:
                            - low
                            - medium
                            - high
                        action_url:
                          type: string
                          format: uri
                          nullable: true
            text/csv:
              schema:
                type: string
                format: binary
              example: |
                Overall Progress,Completion Percentage,Milestones Completed,Total Milestones
                Career Readiness,75,12,16

                Milestone,Category,Completed,Completed Date
                Create resume,resume,true,2025-09-15T10:30:00Z
                Attend career fair,events,true,2025-10-01T14:00:00Z
                Add 5 contacts,networking,false,
                Submit first application,applications,true,2025-10-10T09:00:00Z

                Skills Development,Score/Level
                Resume Score,85
                Networking Strength,proficient
                Application Readiness,ready
            application/pdf:
              schema:
                type: string
                format: binary
                description: PDF formatted progress report with visualizations and milestone timeline
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /api/v1/companies:
    get:
      tags:
        - Companies
      summary: Get companies
      description: Returns companies
      operationId: getCompanies
      parameters:
        - name: page
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
          description: Page number for pagination
        - name: industry
          in: query
          schema:
            type: string
          description: Filter by industry
        - name: category
          in: query
          schema:
            type: string
          description: Filter by category
        - name: tag
          in: query
          schema:
            type: string
          description: Filter by tag
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
        '400':
          description: Bad request - Invalid page or parameter format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Companies
      summary: Save Company
      description: Saving Company to DB & current user's favorite companies
      operationId: saveCompany
      requestBody:
        description: Company data required to save to DB
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  companyID:
                    type: string
        '400':
          $ref: '#/components/responses/JSONValidationFailedError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/companies/issaved:
    post:
      tags:
        - Companies
      summary: Validate company
      description: |
        Endpoint checks if the company exists in the CareerOS database and is it saved by the user.

        Matching rules:
            - company is checked by name and slug

        The endpoint is used exclusively by the browser extension.
      operationId: validateCompany
      requestBody:
        description: LinkedIn identifiers of the company to be validated against (name and slug)
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanySearchFields'
      responses:
        '200':
          description: Company can be saved - it exists in the database and is not saved by the user yet
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Company can be saved
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Company not found - we don't have this company in our database
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Company does not exist in the database
        '409':
          description: Conflict - user already saved this company
          content:
            application/json:
              schema:
                type: object
                properties:
                  company_id:
                    type: string
                    format: uuid
                    description: ID of the company
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/companies/{id}:
    get:
      tags:
        - Companies
      summary: Get Company by ID
      description: Get Company with Jobs by company_id
      operationId: getCompanyById
      parameters:
        - name: id
          in: path
          description: Company ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyWithJobs'
        '400':
          $ref: '#/components/responses/IDValidationFailedError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/companies/{id}/profile:
    get:
      tags:
        - Companies
      summary: Get company profile
      description: Retrieve detailed company profile with additional information
      operationId: getCompanyProfile
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/CompanyIDPath'
      responses:
        '200':
          description: Company profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  name:
                    type: string
                  logo_url:
                    type: string
                    format: uri
                  cover_image_url:
                    type: string
                    format: uri
                  overview:
                    type: string
                  industry:
                    type: string
                  company_size:
                    type: string
                  founded_year:
                    type: integer
                  headquarters:
                    type: string
                  website_url:
                    type: string
                    format: uri
                  linkedin_url:
                    type: string
                    format: uri
                  culture:
                    type: object
                    properties:
                      description:
                        type: string
                      values:
                        type: array
                        items:
                          type: string
                  office_locations:
                    type: array
                    items:
                      type: object
                      properties:
                        city:
                          type: string
                        country:
                          type: string
                        address:
                          type: string
                  media:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - image
                            - video
                        url:
                          type: string
                  testimonials:
                    type: array
                    items:
                      type: object
                      properties:
                        author:
                          type: string
                        role:
                          type: string
                        content:
                          type: string
                  events:
                    type: array
                    items:
                      type: object
                      description: Upcoming events hosted by the company
                  jobs_count:
                    type: integer
                    description: Number of active job postings
                  is_saved:
                    type: boolean
                    description: Whether user has saved this company
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v1/companies/search/{name}:
    get:
      tags:
        - Companies
      summary: Get companies by name
      description: Search companies by name
      operationId: searchCompaniesByName
      parameters:
        - name: name
          in: path
          description: Company name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/companies/explore:
    get:
      tags:
        - Companies
      summary: Explore companies
      description: Get curated companies organized by categories for exploration
      operationId: getExploreCompanies
      security:
        - BearerAuth: []
      parameters:
        - name: industry
          in: query
          description: Filter by industry
          schema:
            type: string
        - name: size
          in: query
          description: Filter by company size
          schema:
            type: string
        - name: tags
          in: query
          description: Filter by tags (comma-separated)
          schema:
            type: string
      responses:
        '200':
          description: Companies retrieved successfully
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    $ref: '#/components/schemas/Company'
                description: Companies organized by category (e.g., "Top Startups", "Fortune 500", "Trending")
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /api/v1/companies/top-saved:
    get:
      tags:
        - Companies
      summary: Get top saved companies
      description: Retrieve most saved companies across the platform
      operationId: getTopSavedCompanies
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: Top saved companies retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    company:
                      $ref: '#/components/schemas/Company'
                    saves_count:
                      type: integer
                      description: Number of students who saved this company
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /api/v1/companies/locations:
    get:
      tags:
        - Companies
      summary: Get company locations
      description: Retrieve list of available company locations for filtering
      operationId: getCompanyLocations
      security:
        - BearerAuth: []
      parameters:
        - name: company_id
          in: query
          description: Get locations for a specific company
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Locations retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    city:
                      type: string
                    country:
                      type: string
                    region:
                      type: string
                    company_count:
                      type: integer
                      description: Number of companies in this location (if not company-specific)
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /api/v1/companies/sizes:
    get:
      tags:
        - Companies
      summary: Get company sizes
      description: Retrieve list of available company size categories
      operationId: getCompanySizes
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Company sizes retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - 1-10
                  - 11-50
                  - 51-200
                  - 201-500
                  - 501-1000
                  - 1001-5000
                  - 5000+
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /api/v1/companies/tags:
    get:
      tags:
        - Companies
      summary: Get company tags
      description: Retrieve list of available company tags for filtering
      operationId: getCompanyTags
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Company tags retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - startup
                  - fortune-500
                  - remote-first
                  - tech
                  - fintech
                  - sustainable
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /api/v1/jobs:
    get:
      tags:
        - Jobs
      summary: Get Jobs
      description: Get a list of jobs
      operationId: getJobs
      parameters:
        - name: limit
          in: query
          description: The maximum number of jobs to retrieve
          required: true
          schema:
            type: integer
            minimum: 1
        - name: offset
          in: query
          description: The offset for pagination
          required: true
          schema:
            type: integer
            minimum: 0
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    post:
      tags:
        - Jobs
      summary: Save job
      description: Save a job to DB & for current user
      operationId: saveJob
      requestBody:
        description: Job's data from Chrome Extension
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobWithCompanyName'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          $ref: '#/components/responses/JSONValidationFailedError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Jobs
      summary: Delete a job
      description: Soft delete a job for the current user.
      operationId: deleteUserJob
      parameters:
        - name: id
          in: path
          description: ID of the job to be deleted.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Success
        '400':
          description: Bad request or Invalid ID format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/jobs/{id}:
    patch:
      tags:
        - Jobs
      summary: Update job
      description: The endpoint updates a piece of information about the job.
      operationId: updateJob
      parameters:
        - name: id
          in: path
          description: Job ID
          required: true
          schema:
            type: string
      requestBody:
        description: Job fields for updating.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobPatch'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: The request body or the job ID in the path has an incorrect format or is empty.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IDValidationFailedError'
                  - $ref: '#/components/schemas/JSONValidationFailedError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/jobs/issaved:
    post:
      tags:
        - Jobs
      summary: Validate job
      description: |
        Endpoint checks if the company in which job is opened exists in the CareerOS database, and 
        that given job is not yet saved by the user for the given company.

        Matching rules:
         - company is checked by name and slug
         - job is checked by linkedin_url

        The endpoint is used exclusively by the browser extension.
      operationId: validateJob
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    company:
                      $ref: '#/components/schemas/CompanySearchFields'
                - type: object
                  properties:
                    job_linkedin_url:
                      type: string
                      description: LinkedIn URL of the job
                  required:
                    - company
                    - job_linkedin_url
      responses:
        '200':
          description: Job can be saved
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - Job can be saved
        '400':
          $ref: '#/components/responses/JSONValidationFailedError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '409':
          description: Conflict - user already saved this job
          content:
            application/json:
              schema:
                type: object
                properties:
                  company_id:
                    type: string
                    format: uuid
                    description: ID of the matched company in which job is opened
                  job_id:
                    type: string
                    format: uuid
                    description: ID of the already saved job
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/jobs/search:
    get:
      tags:
        - Jobs
      summary: Search jobs
      description: Search for job postings with various filters
      operationId: searchJobs
      security:
        - BearerAuth: []
      parameters:
        - name: query
          in: query
          description: Search query string
          schema:
            type: string
          example: Software Engineer
        - name: location
          in: query
          description: Job location filter
          schema:
            type: string
          example: Berlin, Germany
        - name: industry
          in: query
          description: Industry filter
          schema:
            type: string
          example: Technology
        - name: job_type
          in: query
          description: Job type filter
          schema:
            type: string
            enum:
              - full-time
              - part-time
              - internship
              - contract
        - name: experience_level
          in: query
          description: Experience level filter
          schema:
            type: string
            enum:
              - entry
              - mid
              - senior
              - executive
        - name: remote
          in: query
          description: Filter for remote jobs
          schema:
            type: boolean
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: Jobs retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobs:
                    type: array
                    items:
                      $ref: '#/components/schemas/Job'
                  total:
                    type: integer
                    description: Total number of matching jobs
                  limit:
                    type: integer
                  offset:
                    type: integer
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /api/v1/jobs/savedfilters:
    get:
      tags:
        - Jobs
      summary: Get saved job filters
      description: Retrieve user's saved job search filters
      operationId: getUserSavedJobFilters
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Saved filters retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    name:
                      type: string
                    filters:
                      type: object
                      additionalProperties: true
                    created_at:
                      type: string
                      format: date-time
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    post:
      tags:
        - Jobs
      summary: Create saved job filter
      description: Save a job search filter for quick access
      operationId: createSavedJobFilter
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name for the saved filter
                filters:
                  type: object
                  description: Filter parameters
                  additionalProperties: true
      responses:
        '201':
          description: Filter saved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  message:
                    type: string
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /api/v1/contacts:
    post:
      tags:
        - Contacts
      summary: Save contact
      description: Save a contact to DB & for current user
      operationId: saveContact
      requestBody:
        description: Contact's data from chrome extension
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  id:
                    type: string
                    format: uuid
        '400':
          $ref: '#/components/responses/JSONValidationFailedError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/contacts/issaved:
    post:
      tags:
        - Contacts
      summary: Validate contact
      description: |
        Endpoint checks if the company in which contact works currently exists in the CareerOS database, and 
        that given contact is not yet saved by the user for the given company.

        Matching rules:
         - company is checked by name and slug
         - contact is checked by linkedin_url

        The endpoint is used exclusively by the browser extension.
      operationId: validateContact
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    company:
                      $ref: '#/components/schemas/CompanySearchFields'
                - type: object
                  properties:
                    contact_linkedin_url:
                      type: string
                      description: LinkedIn URL of the contact
                  required:
                    - company
                    - contact_linkedin_url
      responses:
        '200':
          description: Contact can be saved
          content:
            application/json:
              schema:
                oneOf:
                  - type: object
                    properties:
                      message:
                        type: string
                        enum:
                          - Contact can be saved
                      should_update:
                        type: boolean
                        description: Whether the contact data should be updated
                  - type: object
                    properties:
                      message:
                        type: string
                        enum:
                          - Already exists and saved by the user
                      company_id:
                        type: string
                        format: uuid
                        description: ID of the matched company in which contact works
                      contact_id:
                        type: string
                        format: uuid
                        description: ID of the already saved contact
                      should_update:
                        type: boolean
                        description: Whether the contact data should be updated
        '400':
          $ref: '#/components/responses/JSONValidationFailedError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/contacts/{id}:
    get:
      tags:
        - Contacts
      summary: Get contact by ID
      description: Get contact by ID
      operationId: getContactByID
      parameters:
        - name: id
          in: path
          description: Contact ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        '400':
          $ref: '#/components/responses/IDValidationFailedError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Contacts
      summary: Delete contact
      description: Delete a contact from DB & for current user by ID
      operationId: deleteContact
      parameters:
        - name: id
          in: path
          description: Contact ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The contact has been successfully removed from the database.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          $ref: '#/components/responses/IDValidationFailedError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/contacts/{id}/email:
    post:
      tags:
        - Contacts
      summary: Set emails by contactID
      description: Set emails by contactID
      operationId: setEmailsByContactID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the contact for whom to set emails
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                secondary_email:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success message
        '400':
          description: Failed to parse ID as UUID or bind JSON body
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IDValidationFailedError'
                  - $ref: '#/components/schemas/JSONValidationFailedError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/contacts/{id}/chat:
    get:
      tags:
        - Contacts
      summary: Get contact with chat info
      description: Retrieve contact details including chat/messaging information
      operationId: getContactWithChatID
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/ContactIDPath'
      responses:
        '200':
          description: Contact retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Contact'
                  - type: object
                    properties:
                      chat_id:
                        type: string
                        description: Chat channel ID for this contact
                      last_message_at:
                        type: string
                        format: date-time
                        nullable: true
                      unread_count:
                        type: integer
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v1/contacts/bycompany/{id}:
    get:
      tags:
        - Contacts
      summary: Get contacts by company ID
      description: Returns all contacts that have relations with the given company
      operationId: getContactsByCompanyID
      parameters:
        - name: id
          in: path
          description: Company ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
        '400':
          $ref: '#/components/responses/IDValidationFailedError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/contacts/bystatus/{status}:
    get:
      tags:
        - Contacts
      summary: Get contacts by Connection Status
      description: Returns all contacts that have the given connection status with the user
      operationId: getContactsByStatus
      parameters:
        - name: status
          in: path
          description: Connection Status
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
        '400':
          $ref: '#/components/responses/IDValidationFailedError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/applications:
    get:
      tags:
        - Applications
      operationId: getApplications
      summary: Returns all applications
      description: Returns applications
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Application'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    patch:
      tags:
        - Applications
      summary: Change Application Status
      operationId: changeApplicationStatus
      requestBody:
        description: Tile's data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tile'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
        '400':
          $ref: '#/components/responses/JSONValidationFailedError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/resume/base:
    get:
      tags:
        - Resume
      summary: Get base resumes
      description: Retrieve all base resumes for the authenticated user
      operationId: getBaseResumes
      security:
        - BearerAuth: []
      parameters:
        - name: status
          in: query
          description: Filter by resume status
          schema:
            type: string
            enum:
              - draft
              - in_review
              - needs_revision
              - approved
              - published
      responses:
        '200':
          description: Resumes retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    title:
                      type: string
                    template_id:
                      type: string
                      format: uuid
                    template_name:
                      type: string
                    status:
                      type: string
                      enum:
                        - draft
                        - in_review
                        - needs_revision
                        - approved
                        - published
                    preview_url:
                      type: string
                      format: uri
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                    review:
                      type: object
                      nullable: true
                      properties:
                        reviewer_id:
                          type: string
                          format: uuid
                        reviewer_name:
                          type: string
                        status:
                          type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /api/v1/resume/base/empty:
    post:
      tags:
        - Resume
      summary: Create empty base resume
      description: Create a new empty base resume for the user
      operationId: createEmptyBaseResume
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - template_id
              properties:
                title:
                  type: string
                  example: Software Engineer Resume
                template_id:
                  type: string
                  format: uuid
                  description: ID of the resume template to use
      responses:
        '201':
          description: Resume created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  title:
                    type: string
                  template_id:
                    type: string
                    format: uuid
                  status:
                    type: string
                    enum:
                      - draft
                      - in_review
                      - approved
                      - published
                  created_at:
                    type: string
                    format: date-time
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /api/v1/resume/base/copy:
    post:
      tags:
        - Resume
      summary: Copy base resume
      description: Create a copy of an existing base resume
      operationId: copyBaseResume
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - base_resume_id
              properties:
                base_resume_id:
                  type: string
                  format: uuid
                  description: ID of the resume to copy
                title:
                  type: string
                  description: Title for the new copy
      responses:
        '201':
          description: Resume copied successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  message:
                    type: string
                    example: Resume copied successfully
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v1/resume/base/{baseResumeID}:
    get:
      tags:
        - Resumes
      summary: Get base resume by id
      description: Get base resume by id
      operationId: getBaseResumeById
      parameters:
        - name: baseResumeID
          in: path
          description: base resume id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/base_resume_response'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      tags:
        - Resumes
      summary: Update base resume by id
      description: |
        This endpoint allows users to update an existing resume by providing the ID of the resume to be updated along with the new resume schema object.
        Upon successful update, the server responds with the updated resume resource.
      operationId: updateBaseResumeById
      parameters:
        - name: baseResumeID
          in: path
          description: base resume id
          required: true
          schema:
            type: string
            format: uuid
            example: 2437816f-ddec-4bf3-a649-6f13efc0aeb5
      requestBody:
        required: true
        description: Base resume object
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  format: uuid
                  example: 2437816f-ddec-4bf3-a649-6f13efc0aeb5
                resume:
                  $ref: '#/components/schemas/Resume'
                resume_template:
                  type: string
                  example: ESADE
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Tailored resume has been successfully updated
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      tags:
        - Resumes
      summary: Delete base resume by id
      description: Delete base resume by id
      operationId: deleteBaseResumeById
      parameters:
        - name: baseResumeID
          in: path
          description: base resume id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No content
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/resume/base/{id}/content:
    patch:
      tags:
        - Resume
      summary: Update base resume content
      description: Update the content sections of a base resume
      operationId: updateBaseResumeContent
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Base resume ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                personal_info:
                  type: object
                  properties:
                    full_name:
                      type: string
                    email:
                      type: string
                      format: email
                    phone:
                      type: string
                    location:
                      type: string
                    linkedin_url:
                      type: string
                    website_url:
                      type: string
                summary:
                  type: string
                  description: Professional summary
                work_experience:
                  type: array
                  items:
                    type: object
                    properties:
                      company:
                        type: string
                      title:
                        type: string
                      location:
                        type: string
                      start_date:
                        type: string
                      end_date:
                        type: string
                        nullable: true
                      current:
                        type: boolean
                      description:
                        type: array
                        items:
                          type: string
                education:
                  type: array
                  items:
                    type: object
                    properties:
                      institution:
                        type: string
                      degree:
                        type: string
                      field_of_study:
                        type: string
                      start_date:
                        type: string
                      end_date:
                        type: string
                      gpa:
                        type: string
                        nullable: true
                skills:
                  type: array
                  items:
                    type: string
                languages:
                  type: array
                  items:
                    type: object
                    properties:
                      language:
                        type: string
                      proficiency:
                        type: string
                certifications:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      issuer:
                        type: string
                      date:
                        type: string
                      url:
                        type: string
                        nullable: true
      responses:
        '200':
          description: Resume content updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  updated_at:
                    type: string
                    format: date-time
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v1/resume/base/{id}/status:
    patch:
      tags:
        - Resume
      summary: Update base resume status
      description: Update the status of a base resume (e.g., submit for review, publish)
      operationId: updateBaseResumeStatus
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Base resume ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum:
                    - draft
                    - in_review
                    - needs_revision
                    - approved
                    - published
      responses:
        '200':
          description: Resume status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  status:
                    type: string
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v1/resume/templates:
    get:
      tags:
        - Resumes
      summary: Get resume templates
      description: Get resume templates
      operationId: getResumeTemplates
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Resume_template'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/resume/templates/{templateID}:
    get:
      tags:
        - Resumes
      summary: Get resume template by id
      description: Get resume template by id
      operationId: getResumeTemplateByID
      parameters:
        - name: templateID
          in: path
          description: templateID
          required: true
          schema:
            type: string
            format: uuid
            example: 2ad3189c-7f7c-4c63-b417-cc9db69f03bc
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resume_template'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/resume/score/action-verbs:
    get:
      tags:
        - Resume
      summary: Get action verbs
      description: Retrieve a list of recommended action verbs for resume writing
      operationId: getActionVerbs
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Action verbs retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  action_verbs:
                    type: array
                    items:
                      type: string
                    description: List of recommended action verbs
                  avoided_verbs:
                    type: array
                    items:
                      type: string
                    description: List of verbs to avoid
                  categories:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: string
                    description: Action verbs organized by category (e.g., leadership, technical, communication)
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /api/v1/resume/score/{baseResumeID}:
    get:
      tags:
        - Resume
      summary: Get resume score
      description: Get the current score and analysis for a base resume
      operationId: getResumeScore
      security:
        - BearerAuth: []
      parameters:
        - name: baseResumeID
          in: path
          required: true
          description: Base resume ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Resume score retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  overall_score:
                    type: integer
                    minimum: 0
                    maximum: 100
                    description: Overall resume score
                  categories:
                    type: object
                    properties:
                      impact:
                        type: object
                        properties:
                          score:
                            type: integer
                          feedback:
                            type: array
                            items:
                              type: string
                      brevity:
                        type: object
                        properties:
                          score:
                            type: integer
                          feedback:
                            type: array
                            items:
                              type: string
                      style:
                        type: object
                        properties:
                          score:
                            type: integer
                          feedback:
                            type: array
                            items:
                              type: string
                      sections:
                        type: object
                        properties:
                          score:
                            type: integer
                          feedback:
                            type: array
                            items:
                              type: string
                  last_updated:
                    type: string
                    format: date-time
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    put:
      tags:
        - Resume
      summary: Calculate resume score
      description: Calculate and update the score for a base resume
      operationId: calculateResumeScore
      security:
        - BearerAuth: []
      parameters:
        - name: baseResumeID
          in: path
          required: true
          description: Base resume ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Resume score calculated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  overall_score:
                    type: integer
                  categories:
                    type: object
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v1/resume/review:
    post:
      tags:
        - Resume
      summary: Request resume review
      description: Submit a base resume for review by a career advisor
      operationId: requestResumeReview
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - base_resume_id
              properties:
                base_resume_id:
                  type: string
                  format: uuid
                notes:
                  type: string
                  description: Optional notes or questions for the reviewer
      responses:
        '201':
          description: Review requested successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  review_id:
                    type: string
                    format: uuid
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '409':
          description: Resume already in review
  /api/v1/resume/review/counts:
    get:
      tags:
        - Resume
      summary: Get resume review counts
      description: Get statistics about resume reviews (for career advisors)
      operationId: getResumeReviewCounts
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Review counts retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  pending:
                    type: integer
                    description: Number of resumes pending review
                  in_review:
                    type: integer
                    description: Number of resumes currently being reviewed
                  completed:
                    type: integer
                    description: Number of completed reviews
                  my_assignments:
                    type: integer
                    description: Number of reviews assigned to me
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
  /api/v1/events/search:
    get:
      tags:
        - Events
      summary: Search events
      description: Search for events with various filters
      operationId: searchEventsStudents
      security:
        - BearerAuth: []
      parameters:
        - name: query
          in: query
          description: Search query string
          schema:
            type: string
        - name: type
          in: query
          description: Event type filter
          schema:
            type: string
            enum:
              - workshop
              - networking
              - career_fair
              - webinar
              - company_presentation
        - name: date_from
          in: query
          description: Start date filter (ISO 8601)
          schema:
            type: string
            format: date
        - name: date_to
          in: query
          description: End date filter (ISO 8601)
          schema:
            type: string
            format: date
        - name: status
          in: query
          description: Event status filter
          schema:
            type: string
            enum:
              - upcoming
              - ongoing
              - past
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: Events retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        title:
                          type: string
                        description:
                          type: string
                        type:
                          type: string
                        start_time:
                          type: string
                          format: date-time
                        end_time:
                          type: string
                          format: date-time
                        location:
                          type: string
                        is_virtual:
                          type: boolean
                        max_participants:
                          type: integer
                        registered_count:
                          type: integer
                        organizer:
                          type: object
                          properties:
                            name:
                              type: string
                            logo_url:
                              type: string
                  total:
                    type: integer
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /api/v1/events/{eventId}:
    get:
      tags:
        - Events
      summary: Get event details
      description: Retrieve detailed information about a specific event
      operationId: getEvent
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/EventIDPath'
      responses:
        '200':
          description: Event details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  title:
                    type: string
                  description:
                    type: string
                  type:
                    type: string
                  start_time:
                    type: string
                    format: date-time
                  end_time:
                    type: string
                    format: date-time
                  location:
                    type: string
                  is_virtual:
                    type: boolean
                  virtual_link:
                    type: string
                    format: uri
                  max_participants:
                    type: integer
                  registered_count:
                    type: integer
                  waitlist_count:
                    type: integer
                  organizer:
                    type: object
                  speakers:
                    type: array
                    items:
                      type: object
                  questions:
                    type: array
                    items:
                      type: object
                  user_registration_status:
                    type: string
                    enum:
                      - not_registered
                      - registered
                      - waitlisted
                      - attended
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v1/events/{eventId}/apply:
    post:
      tags:
        - Events
      summary: Apply to event
      description: Register for an event
      operationId: applyToEvent
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/EventIDPath'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                answers:
                  type: array
                  description: Answers to event registration questions
                  items:
                    type: object
                    properties:
                      question_id:
                        type: string
                        format: uuid
                      answer:
                        type: string
      responses:
        '201':
          description: Successfully registered for event
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                      - registered
                      - waitlisted
                  message:
                    type: string
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '409':
          description: Already registered for this event
  /api/v1/events/{eventId}/cancel:
    post:
      tags:
        - Events
      summary: Cancel event participation
      description: Cancel the user's registration for an event
      operationId: cancelEventParticipation
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/EventIDPath'
      responses:
        '200':
          description: Participation cancelled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '409':
          description: Not registered for this event or cannot cancel
  /api/v1/events/{eventId}/speakers:
    get:
      tags:
        - Events
      summary: Get event speakers
      description: Retrieve speakers for a specific event
      operationId: getEventSpeakers
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/EventIDPath'
      responses:
        '200':
          description: Speakers retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    name:
                      type: string
                    title:
                      type: string
                    company:
                      type: string
                    bio:
                      type: string
                    profile_picture_url:
                      type: string
                      format: uri
                    linkedin_url:
                      type: string
                      format: uri
                    is_saved:
                      type: boolean
                      description: Whether user has saved this speaker as a contact
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v1/events/{eventId}/download-ics:
    get:
      tags:
        - Events
      summary: Download event ICS file
      description: Download calendar file (.ics) for the event
      operationId: downloadEventICS
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/EventIDPath'
      responses:
        '200':
          description: ICS file generated successfully
          content:
            text/calendar:
              schema:
                type: string
                format: binary
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v1/ai/job-extraction:
    post:
      tags:
        - AI
      summary: Extract job details from URL
      description: Extract and parse job details from a job posting URL using AI
      operationId: extractJobFromURL
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - url
              properties:
                url:
                  type: string
                  format: uri
                  description: URL of the job posting
                  example: https://www.linkedin.com/jobs/view/1234567890
      responses:
        '200':
          description: Job details extracted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                  company:
                    type: string
                  location:
                    type: string
                  description:
                    type: string
                  requirements:
                    type: array
                    items:
                      type: string
                  benefits:
                    type: array
                    items:
                      type: string
                  salary_range:
                    type: object
                    properties:
                      min:
                        type: number
                      max:
                        type: number
                      currency:
                        type: string
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '422':
          description: Unable to extract job details from URL
  /api/v1/users/self/university:
    get:
      tags:
        - Universities
      summary: Get self university
      description: Get the university object associated with the authenticated user
      operationId: getSelfUniversity
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  domain:
                    type: string
                  created_at:
                    type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/university/{universityID}/cohorts:
    get:
      tags:
        - Universities
      summary: Get cohorts by university ID
      description: Get cohorts associated with a specific university
      operationId: getCohortByUniversityID
      parameters:
        - in: path
          name: universityID
          description: ID of the university
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
        '400':
          $ref: '#/components/responses/IDValidationFailedError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalServerError'
  /api/v1/alumn/cohort/{cohortID}:
    get:
      tags:
        - Universities
      summary: Get alumni by cohort
      description: Retrieve alumni profiles for a specific cohort
      operationId: getAlumniByCohortID
      security:
        - BearerAuth: []
      parameters:
        - name: cohortID
          in: path
          required: true
          description: Cohort ID
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: Alumni retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  alumni:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        name:
                          type: string
                        profile_picture:
                          type: string
                          format: uri
                        current_company:
                          type: string
                        current_title:
                          type: string
                        linkedin_url:
                          type: string
                          format: uri
                        graduation_year:
                          type: integer
                        tags:
                          type: array
                          items:
                            type: string
                  total:
                    type: integer
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v1/alumn/university/{universityID}:
    get:
      tags:
        - Universities
      summary: Get alumni by university
      description: Retrieve all alumni profiles for a specific university
      operationId: getAlumniByUniversityID
      security:
        - BearerAuth: []
      parameters:
        - name: universityID
          in: path
          required: true
          description: University ID
          schema:
            type: string
            format: uuid
        - name: company
          in: query
          description: Filter by current company
          schema:
            type: string
        - name: industry
          in: query
          description: Filter by industry
          schema:
            type: string
        - name: graduation_year
          in: query
          description: Filter by graduation year
          schema:
            type: integer
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: Alumni retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  alumni:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        name:
                          type: string
                        profile_picture:
                          type: string
                          format: uri
                        current_company:
                          type: string
                        current_title:
                          type: string
                        linkedin_url:
                          type: string
                          format: uri
                        graduation_year:
                          type: integer
                        cohort_name:
                          type: string
                        tags:
                          type: array
                          items:
                            type: string
                  total:
                    type: integer
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v1/alumn/{id}:
    get:
      tags:
        - Universities
      summary: Get alumni by ID
      description: Retrieve detailed profile information for a specific alumni
      operationId: getAlumByID
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Alumni ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Alumni profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  name:
                    type: string
                  email:
                    type: string
                    format: email
                  profile_picture:
                    type: string
                    format: uri
                  bio:
                    type: string
                  linkedin_url:
                    type: string
                    format: uri
                  graduation_year:
                    type: integer
                  cohort:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      name:
                        type: string
                  career_summary:
                    type: object
                    properties:
                      current_company:
                        type: string
                      current_title:
                        type: string
                      experience:
                        type: array
                        items:
                          type: object
                          properties:
                            company:
                              type: string
                            title:
                              type: string
                            duration:
                              type: string
                  tags:
                    type: array
                    items:
                      type: string
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v1/reports/student/activity:
    get:
      tags:
        - Reports (PROPOSAL)
      summary: Get student activity report
      description: |
        **[PROPOSAL]** Retrieve comprehensive activity report for a student.

        This report includes metrics on applications, job searches, networking activities,
        events, and resume development. Support for multiple export formats (JSON, CSV, PDF)
        enables integration with external analytics tools and provides flexibility for
        reporting workflows.

        **Access**: Students can access their own reports. Advisors can access reports for
        students in their assigned cohorts by providing the student_id parameter.
      operationId: getStudentActivityReport
      security:
        - BearerAuth: []
      parameters:
        - name: student_id
          in: query
          description: Student ID (only for advisors accessing student reports, omit for self-access)
          schema:
            type: string
            format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        - name: start_date
          in: query
          description: Start date for report period (defaults to 30 days ago if not specified)
          schema:
            type: string
            format: date
          example: '2025-09-01'
        - name: end_date
          in: query
          description: End date for report period (defaults to today if not specified)
          schema:
            type: string
            format: date
          example: '2025-10-15'
        - name: format
          in: query
          description: Response format for the report
          schema:
            type: string
            enum:
              - json
              - csv
              - pdf
            default: json
          example: json
        - name: include_timeline
          in: query
          description: Include daily activity timeline in response (JSON format only)
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Activity report retrieved successfully
          headers:
            Content-Disposition:
              description: Attachment header for CSV and PDF formats
              schema:
                type: string
              example: attachment; filename=activity_report_2025-10-15.csv
          content:
            application/json:
              schema:
                type: object
                properties:
                  student:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      name:
                        type: string
                        example: Jane Doe
                      cohort:
                        type: string
                        example: Class of 2025
                  period:
                    type: object
                    properties:
                      start_date:
                        type: string
                        format: date
                      end_date:
                        type: string
                        format: date
                  summary:
                    type: object
                    properties:
                      applications_submitted:
                        type: integer
                        description: Total applications submitted
                      jobs_saved:
                        type: integer
                        description: Total jobs saved
                      companies_researched:
                        type: integer
                        description: Total companies viewed
                      contacts_added:
                        type: integer
                        description: Total contacts added
                      events_attended:
                        type: integer
                        description: Total events registered for
                      resumes_created:
                        type: integer
                        description: Total resumes created
                      advisor_meetings:
                        type: integer
                        description: Total advisor appointments
                  applications_by_status:
                    type: object
                    properties:
                      saved:
                        type: integer
                      applied:
                        type: integer
                      interviewing:
                        type: integer
                      offered:
                        type: integer
                      rejected:
                        type: integer
                      accepted:
                        type: integer
                  activity_timeline:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                        activities:
                          type: integer
                          description: Number of activities on this date
                  top_companies:
                    type: array
                    description: Most frequently interacted companies
                    items:
                      type: object
                      properties:
                        company_id:
                          type: string
                          format: uuid
                        company_name:
                          type: string
                        interactions:
                          type: integer
            text/csv:
              schema:
                type: string
                format: binary
              example: |
                Period,Start Date,End Date
                Report Period,2025-09-01,2025-10-15

                Metric,Count
                Applications Submitted,15
                Jobs Saved,42
                Companies Researched,28
                Contacts Added,12
                Events Attended,5
                Resumes Created,3
                Advisor Meetings,2
            application/pdf:
              schema:
                type: string
                format: binary
                description: PDF formatted activity report with charts and visualizations
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
  /api/v1/reports/student/progress:
    get:
      tags:
        - Reports (PROPOSAL)
      summary: Get student career progress report
      description: |
        **[PROPOSAL]** Retrieve career development progress tracking for a student.

        This report provides insights into overall career readiness, milestone completion,
        skills development, and personalized recommendations for next steps. Supports
        multiple export formats (JSON, CSV, PDF) for sharing progress with advisors
        or integrating with portfolio systems.

        **Access**: Students can access their own reports. Advisors can access reports for
        students in their assigned cohorts by providing the student_id parameter.
      operationId: getStudentProgressReport
      security:
        - BearerAuth: []
      parameters:
        - name: student_id
          in: query
          description: Student ID (only for advisors accessing student reports, omit for self-access)
          schema:
            type: string
            format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        - name: format
          in: query
          description: Response format for the report
          schema:
            type: string
            enum:
              - json
              - csv
              - pdf
            default: json
          example: json
        - name: include_recommendations
          in: query
          description: Include personalized recommendations in response
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Progress report retrieved successfully
          headers:
            Content-Disposition:
              description: Attachment header for CSV and PDF formats
              schema:
                type: string
              example: attachment; filename=progress_report_2025-10-15.pdf
          content:
            application/json:
              schema:
                type: object
                properties:
                  student:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      name:
                        type: string
                        example: Jane Doe
                      cohort:
                        type: string
                        example: Class of 2025
                  overall_progress:
                    type: object
                    properties:
                      completion_percentage:
                        type: integer
                        minimum: 0
                        maximum: 100
                        description: Overall career readiness score
                      milestones_completed:
                        type: integer
                      total_milestones:
                        type: integer
                  milestones:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                          example: Create resume
                        category:
                          type: string
                          enum:
                            - resume
                            - networking
                            - applications
                            - events
                            - skills
                        completed:
                          type: boolean
                        completed_at:
                          type: string
                          format: date-time
                        description:
                          type: string
                  skills_development:
                    type: object
                    properties:
                      resume_score:
                        type: integer
                        minimum: 0
                        maximum: 100
                      networking_strength:
                        type: string
                        enum:
                          - beginner
                          - developing
                          - proficient
                          - advanced
                      application_readiness:
                        type: string
                        enum:
                          - not_ready
                          - getting_ready
                          - ready
                          - highly_prepared
                  recommendations:
                    type: array
                    description: Personalized recommendations for next steps
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          example: Attend a career fair
                        description:
                          type: string
                        priority:
                          type: string
                          enum:
                            - low
                            - medium
                            - high
                        action_url:
                          type: string
                          format: uri
            text/csv:
              schema:
                type: string
                format: binary
              example: |
                Overall Progress,Completion Percentage,Milestones Completed,Total Milestones
                Career Readiness,75,12,16

                Milestone,Category,Completed,Completed Date
                Create resume,resume,true,2025-09-15T10:30:00Z
                Attend career fair,events,true,2025-10-01T14:00:00Z
                Add 5 contacts,networking,false,
                Submit first application,applications,true,2025-10-10T09:00:00Z

                Skills Development,Score/Level
                Resume Score,85
                Networking Strength,proficient
                Application Readiness,ready
            application/pdf:
              schema:
                type: string
                format: binary
                description: PDF formatted progress report with visualizations and milestone timeline
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
  /api/v1/reports/cohort:
    get:
      tags:
        - Reports (PROPOSAL)
      summary: Get cohort-level report
      description: |
        **[PROPOSAL]** Retrieve comprehensive analytics and reports for a specific cohort.

        This report provides advisors with detailed insights into cohort performance,
        including engagement metrics, application statistics, networking activities,
        resume development, and top targeted companies. Ideal for identifying at-risk
        students, measuring program effectiveness, and data-driven decision making.

        Supports multiple export formats (JSON, CSV, PDF) for presentations,
        stakeholder reporting, and integration with institutional analytics systems.

        **Access**: Advisors only. Must have access to the specified cohort.
      operationId: getCohortReport
      security:
        - BearerAuth: []
      parameters:
        - name: cohort_id
          in: query
          required: true
          description: Cohort ID to generate report for
          schema:
            type: string
            format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        - name: start_date
          in: query
          description: Start date for report period (defaults to semester start if not specified)
          schema:
            type: string
            format: date
          example: '2025-09-01'
        - name: end_date
          in: query
          description: End date for report period (defaults to today if not specified)
          schema:
            type: string
            format: date
          example: '2025-10-15'
        - name: format
          in: query
          description: Response format for the report
          schema:
            type: string
            enum:
              - json
              - csv
              - pdf
            default: json
          example: json
        - name: include_student_details
          in: query
          description: Include anonymized student-level details in CSV/PDF exports
          schema:
            type: boolean
            default: false
        - name: compare_to_previous_period
          in: query
          description: Include comparison with previous period (JSON format only)
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Cohort report retrieved successfully
          headers:
            Content-Disposition:
              description: Attachment header for CSV and PDF formats
              schema:
                type: string
              example: attachment; filename=cohort_report_class-of-2025_2025-10-15.pdf
          content:
            application/json:
              schema:
                type: object
                properties:
                  cohort:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      name:
                        type: string
                      total_students:
                        type: integer
                  period:
                    type: object
                    properties:
                      start_date:
                        type: string
                        format: date
                      end_date:
                        type: string
                        format: date
                  engagement_metrics:
                    type: object
                    properties:
                      active_students:
                        type: integer
                        description: Students active in the period
                      total_logins:
                        type: integer
                      avg_session_duration_minutes:
                        type: number
                        format: float
                  application_metrics:
                    type: object
                    properties:
                      total_applications:
                        type: integer
                      students_with_applications:
                        type: integer
                      avg_applications_per_student:
                        type: number
                        format: float
                      applications_by_status:
                        type: object
                        properties:
                          applied:
                            type: integer
                          interviewing:
                            type: integer
                          offered:
                            type: integer
                          accepted:
                            type: integer
                  networking_metrics:
                    type: object
                    properties:
                      total_contacts:
                        type: integer
                      students_networking:
                        type: integer
                      avg_contacts_per_student:
                        type: number
                        format: float
                      events_attended:
                        type: integer
                  resume_metrics:
                    type: object
                    properties:
                      students_with_resumes:
                        type: integer
                      total_resumes:
                        type: integer
                      avg_resume_score:
                        type: number
                        format: float
                      resumes_reviewed:
                        type: integer
                  top_companies:
                    type: array
                    description: Most targeted companies by cohort
                    items:
                      type: object
                      properties:
                        company_name:
                          type: string
                        applications:
                          type: integer
                        students_applied:
                          type: integer
                  appointment_metrics:
                    type: object
                    properties:
                      total_appointments:
                        type: integer
                      students_with_appointments:
                        type: integer
                      avg_appointments_per_student:
                        type: number
                        format: float
            text/csv:
              schema:
                type: string
                format: binary
              example: |
                Cohort Report
                Cohort Name,Total Students,Period Start,Period End
                Class of 2025,150,2025-09-01,2025-10-15

                Engagement Metrics
                Active Students,Total Logins,Avg Session Duration (min)
                120,1450,18.5

                Application Metrics
                Total Applications,Students with Applications,Avg per Student,Applied,Interviewing,Offered,Accepted
                342,95,3.6,250,45,30,17

                Networking Metrics
                Total Contacts,Students Networking,Avg Contacts per Student,Events Attended
                480,78,6.2,125

                Resume Metrics
                Students with Resumes,Total Resumes,Avg Resume Score,Resumes Reviewed
                130,185,78.5,92

                Appointment Metrics
                Total Appointments,Students with Appointments,Avg per Student
                215,88,2.4

                Top Companies
                Company Name,Applications,Students Applied
                Google,45,32
                Microsoft,38,28
                Amazon,35,25
            application/pdf:
              schema:
                type: string
                format: binary
                description: |
                  PDF formatted cohort report with comprehensive visualizations including:
                  - Engagement trends over time
                  - Application funnel metrics
                  - Top companies chart
                  - Student activity heatmap
                  - Comparison with previous periods (if requested)
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v1/reports/jobs:
    get:
      tags:
        - Reports (PROPOSAL)
      summary: List saved report jobs
      description: |
        **[PROPOSAL]** Retrieve all saved report job configurations.

        A report job is a saved query configuration that can be executed multiple times.
        Each execution creates a new report run with its own results and status.
      operationId: listReportJobs
      security:
        - BearerAuth: []
      parameters:
        - name: report_type
          in: query
          description: Filter by report type
          schema:
            type: string
            enum:
              - student_activity
              - student_progress
              - cohort
              - custom
        - name: created_by
          in: query
          description: Filter by creator user ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Report jobs retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  jobs:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: MD5 ID
                          example: abc123
                        label:
                          type: string
                          description: Name of the report
                          example: Weekly Student Activity Report
                        description:
                          type: string
                          description: Description of the report
                          example: Student activity metrics for cohort 2025
                        report_type:
                          type: string
                          enum:
                            - student_activity
                            - student_progress
                            - cohort
                            - custom
                        parameters:
                          type: object
                          description: Report query parameters
                          properties:
                            student_ids:
                              type: array
                              items:
                                type: string
                            cohort_ids:
                              type: array
                              items:
                                type: string
                            from_date:
                              type: string
                              format: date
                            to_date:
                              type: string
                              format: date
                            format:
                              type: string
                              enum:
                                - json
                                - csv
                                - pdf
                        schedule:
                          type: object
                          description: Optional scheduling configuration
                          properties:
                            enabled:
                              type: boolean
                            cron:
                              type: string
                              example: 0 9 * * 1
                            timezone:
                              type: string
                              example: Europe/Madrid
                        last_run:
                          type: string
                          format: date-time
                          description: The date and time of the last report run
                          example: '2025-10-15T09:00:00Z'
                        created_by:
                          type: string
                          format: uuid
                        created_at:
                          type: string
                          format: date-time
                        updated_at:
                          type: string
                          format: date-time
                  total:
                    type: integer
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
    post:
      tags:
        - Reports (PROPOSAL)
      summary: Create a saved report job
      description: |
        **[PROPOSAL]** Save a report configuration that can be executed multiple times.

        This allows you to create reusable report templates with specific parameters,
        and optionally schedule them to run automatically.
      operationId: createReportJob
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - label
                - report_type
                - parameters
              properties:
                label:
                  type: string
                  description: Name for this report job
                  example: Weekly Student Activity Report
                description:
                  type: string
                  description: Detailed description
                  example: Weekly activity metrics for MBA cohort 2025
                report_type:
                  type: string
                  enum:
                    - student_activity
                    - student_progress
                    - cohort
                    - custom
                  description: Type of report to generate
                parameters:
                  type: object
                  description: Report query parameters
                  properties:
                    student_ids:
                      type: array
                      items:
                        type: string
                        format: uuid
                    cohort_ids:
                      type: array
                      items:
                        type: string
                        format: uuid
                    from_date:
                      type: string
                      format: date
                    to_date:
                      type: string
                      format: date
                    format:
                      type: string
                      enum:
                        - json
                        - csv
                        - pdf
                      default: json
                schedule:
                  type: object
                  description: Optional automatic scheduling
                  properties:
                    enabled:
                      type: boolean
                      default: false
                    cron:
                      type: string
                      description: Cron expression for schedule
                      example: 0 9 * * 1
                    timezone:
                      type: string
                      example: Europe/Madrid
                    notify_email:
                      type: string
                      format: email
                      description: Email to notify when report completes
      responses:
        '201':
          description: Report job created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: MD5 ID of the created job
                    example: abc123
                  label:
                    type: string
                  message:
                    type: string
                    example: Report job created successfully
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
  /api/v1/reports/jobs/{id}:
    get:
      tags:
        - Reports (PROPOSAL)
      summary: Get report job details
      description: |
        **[PROPOSAL]** Retrieve detailed information about a specific report job,
        including its configuration and execution history summary.
      operationId: getReportJob
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Report job ID (MD5)
          schema:
            type: string
      responses:
        '200':
          description: Report job details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: abc123
                  label:
                    type: string
                  description:
                    type: string
                  report_type:
                    type: string
                  parameters:
                    type: object
                  schedule:
                    type: object
                  last_run:
                    type: string
                    format: date-time
                  run_count:
                    type: integer
                    description: Total number of times this job has been executed
                  created_by:
                    type: string
                    format: uuid
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    put:
      tags:
        - Reports (PROPOSAL)
      summary: Update report job
      description: |
        **[PROPOSAL]** Update a saved report job's configuration.
      operationId: updateReportJob
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Report job ID (MD5)
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: string
                description:
                  type: string
                parameters:
                  type: object
                schedule:
                  type: object
      responses:
        '200':
          description: Report job updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  updated_at:
                    type: string
                    format: date-time
                  message:
                    type: string
                    example: Report job updated successfully
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    delete:
      tags:
        - Reports (PROPOSAL)
      summary: Delete report job
      description: |
        **[PROPOSAL]** Delete a saved report job.

        **Note:** This will also delete all associated report runs and their results.
      operationId: deleteReportJob
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Report job ID (MD5)
          schema:
            type: string
      responses:
        '200':
          description: Report job deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  deleted_at:
                    type: string
                    format: date-time
                  runs_deleted:
                    type: integer
                    description: Number of report runs that were also deleted
                  message:
                    type: string
                    example: Report job and all associated runs deleted successfully
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v1/reports/jobs/{id}/run:
    post:
      tags:
        - Reports (PROPOSAL)
      summary: Execute a report job
      description: |
        **[PROPOSAL]** Run a saved report job and create a new report run.

        This executes the report with the job's configured parameters and returns
        a run ID that can be used to check status and retrieve results.
      operationId: executeReportJob
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Report job ID (MD5)
          schema:
            type: string
      requestBody:
        required: false
        description: Optional parameter overrides for this specific run
        content:
          application/json:
            schema:
              type: object
              properties:
                parameter_overrides:
                  type: object
                  description: Override specific parameters for this run only
                  properties:
                    from_date:
                      type: string
                      format: date
                    to_date:
                      type: string
                      format: date
                    format:
                      type: string
                      enum:
                        - json
                        - csv
                        - pdf
                notify_email:
                  type: string
                  format: email
                  description: Email to notify when this run completes
      responses:
        '202':
          description: Report execution started
          content:
            application/json:
              schema:
                type: object
                properties:
                  run_id:
                    type: string
                    description: Unique ID for this report run
                    example: run_xyz789
                  job_id:
                    type: string
                    example: abc123
                  status:
                    type: string
                    enum:
                      - queued
                      - running
                      - completed
                      - failed
                    example: queued
                  started_at:
                    type: string
                    format: date-time
                  message:
                    type: string
                    example: Report execution started. Check status at /api/v1/reports/jobs/{id}/runs/{run_id}
                  status_url:
                    type: string
                    format: uri
                    example: /api/v1/reports/jobs/abc123/runs/run_xyz789
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v1/reports/jobs/{id}/runs:
    get:
      tags:
        - Reports (PROPOSAL)
      summary: Get report job execution history
      description: |
        **[PROPOSAL]** Retrieve the execution history for a specific report job.

        Returns a list of all report runs for this job, including status, timestamps,
        and result availability.
      operationId: getReportJobRuns
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Report job ID (MD5)
          schema:
            type: string
        - name: status
          in: query
          description: Filter by run status
          schema:
            type: string
            enum:
              - queued
              - running
              - completed
              - failed
        - name: limit
          in: query
          description: Number of runs to return
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
        - name: offset
          in: query
          description: Number of runs to skip (pagination)
          schema:
            type: integer
            default: 0
            minimum: 0
      responses:
        '200':
          description: Report runs retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  job_id:
                    type: string
                    example: abc123
                  job_label:
                    type: string
                    example: Weekly Student Activity Report
                  runs:
                    type: array
                    items:
                      type: object
                      properties:
                        run_id:
                          type: string
                          example: run_xyz789
                        status:
                          type: string
                          enum:
                            - queued
                            - running
                            - completed
                            - failed
                        started_at:
                          type: string
                          format: date-time
                        completed_at:
                          type: string
                          format: date-time
                          nullable: true
                        duration_seconds:
                          type: integer
                          description: Execution time in seconds
                          nullable: true
                        record_count:
                          type: integer
                          description: Number of records in the report
                          nullable: true
                        file_size_bytes:
                          type: integer
                          description: Size of the generated report file
                          nullable: true
                        format:
                          type: string
                          enum:
                            - json
                            - csv
                            - pdf
                        error_message:
                          type: string
                          nullable: true
                          description: Error message if status is 'failed'
                        triggered_by:
                          type: string
                          description: How this run was triggered
                          enum:
                            - manual
                            - scheduled
                            - api
                        triggered_by_user:
                          type: string
                          format: uuid
                          nullable: true
                  total:
                    type: integer
                    description: Total number of runs for this job
                  limit:
                    type: integer
                  offset:
                    type: integer
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v1/reports/jobs/{id}/runs/{run_id}:
    get:
      tags:
        - Reports (PROPOSAL)
      summary: Get report run status and details
      description: |
        **[PROPOSAL]** Retrieve the status and details of a specific report run.

        Use this endpoint to check the execution status and get metadata about the generated report.
        To download the actual report data, use the `/results` endpoint.
      operationId: getReportRun
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Report job ID (MD5)
          schema:
            type: string
        - name: run_id
          in: path
          required: true
          description: Report run ID
          schema:
            type: string
      responses:
        '200':
          description: Report run details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  run_id:
                    type: string
                    example: run_xyz789
                  job_id:
                    type: string
                    example: abc123
                  job_label:
                    type: string
                  status:
                    type: string
                    enum:
                      - queued
                      - running
                      - completed
                      - failed
                  started_at:
                    type: string
                    format: date-time
                  completed_at:
                    type: string
                    format: date-time
                    nullable: true
                  duration_seconds:
                    type: integer
                    nullable: true
                  progress_percent:
                    type: integer
                    description: Progress percentage for running reports (0-100)
                    minimum: 0
                    maximum: 100
                    nullable: true
                  parameters:
                    type: object
                    description: Parameters used for this run
                  record_count:
                    type: integer
                    description: Number of records in the generated report
                    nullable: true
                  file_size_bytes:
                    type: integer
                    nullable: true
                  format:
                    type: string
                    enum:
                      - json
                      - csv
                      - pdf
                  error_message:
                    type: string
                    nullable: true
                  triggered_by:
                    type: string
                    enum:
                      - manual
                      - scheduled
                      - api
                  triggered_by_user:
                    type: string
                    format: uuid
                    nullable: true
                  results_url:
                    type: string
                    format: uri
                    description: URL to download report results (only if status is 'completed')
                    nullable: true
                    example: /api/v1/reports/jobs/abc123/runs/run_xyz789/results
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v1/reports/jobs/{id}/runs/{run_id}/results:
    get:
      tags:
        - Reports (PROPOSAL)
      summary: Download report run results
      description: |
        **[PROPOSAL]** Download the generated report data for a completed report run.

        The response format (JSON, CSV, or PDF) matches the format specified when the report was created/executed.
        The Content-Disposition header will include a suggested filename.

        **Note:** This endpoint only returns data for runs with status 'completed'.
      operationId: downloadReportResults
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Report job ID (MD5)
          schema:
            type: string
        - name: run_id
          in: path
          required: true
          description: Report run ID
          schema:
            type: string
      responses:
        '200':
          description: Report results download
          headers:
            Content-Disposition:
              schema:
                type: string
              description: Suggested filename for download
              example: attachment; filename=student_activity_report_2025-10-15_run_xyz789.csv
          content:
            application/json:
              schema:
                type: object
                description: Report data in JSON format
                example:
                  report_metadata:
                    job_id: abc123
                    run_id: run_xyz789
                    generated_at: '2025-10-15T10:30:00Z'
                    parameters:
                      ...: null
                  data:
                    - ...
                  summary:
                    ...: null
            text/csv:
              schema:
                type: string
                format: binary
                description: Report data in CSV format with header row
            application/pdf:
              schema:
                type: string
                format: binary
                description: Report data in PDF format with formatted layout
        '400':
          description: Report run not yet completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Report not ready
                  message:
                    type: string
                    example: 'This report run is still in progress. Current status: running'
                  status:
                    type: string
                    enum:
                      - queued
                      - running
                      - failed
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v1/appointments:
    get:
      tags:
        - CalendarOS (BETA)
      summary: List appointments
      description: |
        **[BETA - CalendarOS]** Retrieve appointments with flexible filtering.

        **Access**:
        - Students: See their own appointments
        - Advisors: See all appointments for students in their cohorts
      operationId: listAppointments
      security:
        - BearerAuth: []
      parameters:
        - name: status
          in: query
          description: Filter by appointment status
          schema:
            type: string
            enum:
              - pending
              - confirmed
              - scheduled
              - completed
              - cancelled
              - no_show
        - name: student_id
          in: query
          description: Filter by specific student (advisors only)
          schema:
            type: string
            format: uuid
        - name: advisor_id
          in: query
          description: Filter by specific advisor
          schema:
            type: string
            format: uuid
        - name: start_date
          in: query
          description: Filter appointments starting from this date
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          description: Filter appointments until this date
          schema:
            type: string
            format: date
        - name: type
          in: query
          description: Filter by appointment type
          schema:
            type: string
            enum:
              - career_counseling
              - resume_review
              - mock_interview
              - job_search_strategy
              - networking_advice
              - general
              - other
        - name: limit
          in: query
          description: Maximum number of results
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
        - name: offset
          in: query
          description: Number of results to skip
          schema:
            type: integer
            default: 0
            minimum: 0
      responses:
        '200':
          description: Appointments retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  appointments:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        student:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            name:
                              type: string
                            email:
                              type: string
                              format: email
                        advisor:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            name:
                              type: string
                            email:
                              type: string
                              format: email
                        scheduled_at:
                          type: string
                          format: date-time
                          description: Appointment date and time
                        duration_minutes:
                          type: integer
                          example: 30
                        type:
                          type: string
                          enum:
                            - career_counseling
                            - resume_review
                            - mock_interview
                            - job_search_strategy
                            - networking_advice
                            - general
                            - other
                        status:
                          type: string
                          enum:
                            - pending
                            - confirmed
                            - scheduled
                            - completed
                            - cancelled
                            - no_show
                        confirmation_code:
                          type: string
                          description: Unique booking confirmation code
                          example: APT-2025-ABC123
                        location:
                          type: string
                          description: Meeting location or video call link
                        meeting_platform:
                          type: string
                          enum:
                            - in_person
                            - zoom
                            - teams
                            - google_meet
                            - phone
                            - other
                        notes:
                          type: string
                          description: Advisor's notes about the appointment
                        student_notes:
                          type: string
                          description: Student's reason for appointment
                        created_at:
                          type: string
                          format: date-time
                        updated_at:
                          type: string
                          format: date-time
                  total:
                    type: integer
                  limit:
                    type: integer
                  offset:
                    type: integer
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
    post:
      tags:
        - CalendarOS (BETA)
      summary: Book appointment
      description: |
        **[BETA - CalendarOS]** Create a new appointment booking.

        **Student booking**: Creates appointment with `pending` status, awaiting advisor confirmation
        **Advisor booking**: Creates appointment with `confirmed` status automatically
      operationId: createAppointment
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - scheduled_at
                - duration_minutes
                - type
              properties:
                student_id:
                  type: string
                  format: uuid
                  description: Required when advisor is creating appointment, omit for self-booking
                advisor_id:
                  type: string
                  format: uuid
                  description: Required when student is booking, omit when advisor creates
                scheduled_at:
                  type: string
                  format: date-time
                  example: '2025-10-20T14:00:00Z'
                duration_minutes:
                  type: integer
                  example: 30
                  minimum: 15
                  maximum: 120
                type:
                  type: string
                  enum:
                    - career_counseling
                    - resume_review
                    - mock_interview
                    - job_search_strategy
                    - networking_advice
                    - general
                    - other
                meeting_platform:
                  type: string
                  enum:
                    - in_person
                    - zoom
                    - teams
                    - google_meet
                    - phone
                    - other
                  default: zoom
                location:
                  type: string
                  description: Meeting location or video call link
                student_notes:
                  type: string
                  description: Reason for appointment or topics to discuss
                send_confirmation_email:
                  type: boolean
                  default: true
                  description: Send email confirmation to both parties
      responses:
        '201':
          description: Appointment created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  confirmation_code:
                    type: string
                    description: Unique booking confirmation code
                    example: APT-2025-ABC123
                  student_id:
                    type: string
                    format: uuid
                  advisor_id:
                    type: string
                    format: uuid
                  scheduled_at:
                    type: string
                    format: date-time
                  duration_minutes:
                    type: integer
                  type:
                    type: string
                  status:
                    type: string
                    enum:
                      - pending
                      - confirmed
                  meeting_platform:
                    type: string
                  location:
                    type: string
                  created_at:
                    type: string
                    format: date-time
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '409':
          description: Scheduling conflict - time slot not available
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Conflict
                  message:
                    type: string
                    example: Selected time slot is not available
  /api/v1/appointments/{id}:
    get:
      tags:
        - CalendarOS (BETA)
      summary: Get appointment details
      description: |
        **[BETA - CalendarOS]** Retrieve detailed information about a specific appointment.
      operationId: getAppointmentById
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Appointment ID
      responses:
        '200':
          description: Appointment details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  confirmation_code:
                    type: string
                    example: APT-2025-ABC123
                  student:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      name:
                        type: string
                      email:
                        type: string
                        format: email
                      phone:
                        type: string
                  advisor:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      name:
                        type: string
                      email:
                        type: string
                        format: email
                      title:
                        type: string
                      office_location:
                        type: string
                  scheduled_at:
                    type: string
                    format: date-time
                  duration_minutes:
                    type: integer
                  type:
                    type: string
                    enum:
                      - career_counseling
                      - resume_review
                      - mock_interview
                      - job_search_strategy
                      - networking_advice
                      - general
                      - other
                  status:
                    type: string
                    enum:
                      - pending
                      - confirmed
                      - scheduled
                      - completed
                      - cancelled
                      - no_show
                  meeting_platform:
                    type: string
                    enum:
                      - in_person
                      - zoom
                      - teams
                      - google_meet
                      - phone
                      - other
                  location:
                    type: string
                  notes:
                    type: string
                  student_notes:
                    type: string
                  attendance_marked_at:
                    type: string
                    format: date-time
                  attended:
                    type: boolean
                  cancellation_reason:
                    type: string
                  cancelled_by:
                    type: string
                    enum:
                      - student
                      - advisor
                      - system
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    put:
      tags:
        - CalendarOS (BETA)
      summary: Update appointment
      description: |
        **[BETA - CalendarOS]** Update appointment details.

        **Students** can update: student_notes
        **Advisors** can update: all fields
      operationId: updateAppointment
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Appointment ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                scheduled_at:
                  type: string
                  format: date-time
                duration_minutes:
                  type: integer
                  minimum: 15
                  maximum: 120
                type:
                  type: string
                  enum:
                    - career_counseling
                    - resume_review
                    - mock_interview
                    - job_search_strategy
                    - networking_advice
                    - general
                    - other
                meeting_platform:
                  type: string
                  enum:
                    - in_person
                    - zoom
                    - teams
                    - google_meet
                    - phone
                    - other
                location:
                  type: string
                notes:
                  type: string
                student_notes:
                  type: string
      responses:
        '200':
          description: Appointment updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  updated_at:
                    type: string
                    format: date-time
                  message:
                    type: string
                    example: Appointment updated successfully
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    delete:
      tags:
        - CalendarOS (BETA)
      summary: Cancel appointment
      description: |
        **[BETA - CalendarOS]** Cancel an appointment. Both students and advisors can cancel appointments.
      operationId: cancelAppointment
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Appointment ID
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                cancellation_reason:
                  type: string
                  description: Reason for cancellation
                send_notification:
                  type: boolean
                  default: true
                  description: Send cancellation notification to other party
      responses:
        '200':
          description: Appointment cancelled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  status:
                    type: string
                    example: cancelled
                  cancelled_at:
                    type: string
                    format: date-time
                  message:
                    type: string
                    example: Appointment cancelled successfully
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v1/appointments/{id}/confirm:
    post:
      tags:
        - CalendarOS (BETA)
      summary: Confirm appointment booking
      description: |
        **[BETA - CalendarOS]** Confirm a pending appointment booking.

        When a student books an appointment, it starts in `pending` status. The advisor
        must confirm the booking to change status to `confirmed`.

        **Access**: Advisors only
      operationId: confirmAppointment
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Appointment ID
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                location:
                  type: string
                  description: Confirm or update meeting location/link
                notes:
                  type: string
                  description: Advisor notes to include in confirmation
                send_confirmation_email:
                  type: boolean
                  default: true
                  description: Send confirmation email to student
      responses:
        '200':
          description: Appointment confirmed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  confirmation_code:
                    type: string
                    example: APT-2025-ABC123
                  status:
                    type: string
                    example: confirmed
                  scheduled_at:
                    type: string
                    format: date-time
                  location:
                    type: string
                  confirmed_at:
                    type: string
                    format: date-time
                  message:
                    type: string
                    example: Appointment confirmed and student has been notified
        '400':
          description: Invalid request - appointment cannot be confirmed
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid status
                  message:
                    type: string
                    example: Only pending appointments can be confirmed
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v1/appointments/{id}/mark-attendance:
    post:
      tags:
        - CalendarOS (BETA)
      summary: Mark appointment attendance
      description: |
        **[BETA - CalendarOS]** Mark whether the student attended the appointment.

        This endpoint allows advisors to record attendance after an appointment.
        Marking attendance automatically updates the appointment status to `completed`
        or `no_show`.

        **Access**: Advisors only
      operationId: markAppointmentAttendance
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Appointment ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - attended
              properties:
                attended:
                  type: boolean
                  description: Whether the student attended the appointment
                notes:
                  type: string
                  description: Advisor notes from the appointment
                outcomes:
                  type: array
                  description: Key outcomes or action items from the appointment
                  items:
                    type: string
                  example:
                    - Updated resume reviewed
                    - Identified target companies
                    - Scheduled follow-up
                follow_up_required:
                  type: boolean
                  default: false
                  description: Whether a follow-up appointment is needed
                follow_up_date:
                  type: string
                  format: date
                  description: Suggested date for follow-up (if required)
      responses:
        '200':
          description: Attendance marked successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  attended:
                    type: boolean
                  status:
                    type: string
                    enum:
                      - completed
                      - no_show
                  attendance_marked_at:
                    type: string
                    format: date-time
                  outcomes:
                    type: array
                    items:
                      type: string
                  follow_up_required:
                    type: boolean
                  message:
                    type: string
                    example: Attendance marked successfully
        '400':
          description: Invalid request - attendance already marked or appointment not yet occurred
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid operation
                  message:
                    type: string
                    example: Attendance can only be marked for past appointments
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v1/appointments/availability:
    get:
      tags:
        - CalendarOS (BETA)
      summary: Get advisor availability
      description: |
        **[BETA - CalendarOS]** Retrieve available time slots for booking appointments with an advisor.

        Returns open time slots based on the advisor's availability schedule and
        existing bookings.
      operationId: getAdvisorAvailability
      security:
        - BearerAuth: []
      parameters:
        - name: advisor_id
          in: query
          required: true
          description: Advisor ID to check availability for
          schema:
            type: string
            format: uuid
        - name: start_date
          in: query
          required: true
          description: Start date for availability window
          schema:
            type: string
            format: date
          example: '2025-10-20'
        - name: end_date
          in: query
          required: true
          description: End date for availability window
          schema:
            type: string
            format: date
          example: '2025-10-27'
        - name: duration_minutes
          in: query
          description: Desired appointment duration (to filter compatible slots)
          schema:
            type: integer
            default: 30
            minimum: 15
            maximum: 120
      responses:
        '200':
          description: Availability retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  advisor:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      name:
                        type: string
                      title:
                        type: string
                  available_slots:
                    type: array
                    description: List of available time slots
                    items:
                      type: object
                      properties:
                        start_time:
                          type: string
                          format: date-time
                          example: '2025-10-20T09:00:00Z'
                        end_time:
                          type: string
                          format: date-time
                          example: '2025-10-20T09:30:00Z'
                        duration_minutes:
                          type: integer
                          example: 30
                        location:
                          type: string
                          example: Office 301
                        meeting_platform:
                          type: string
                          example: zoom
                  timezone:
                    type: string
                    example: America/New_York
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    put:
      tags:
        - CalendarOS (BETA)
      summary: Update advisor availability schedule
      description: |
        **[BETA - CalendarOS]** Set or update the availability schedule for an advisor.

        Define recurring weekly availability and specific date overrides.

        **Access**: Advisors can only update their own availability
      operationId: updateAdvisorAvailability
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                timezone:
                  type: string
                  example: America/New_York
                  description: Timezone for all time slots
                weekly_schedule:
                  type: array
                  description: Recurring weekly availability
                  items:
                    type: object
                    required:
                      - day_of_week
                      - start_time
                      - end_time
                    properties:
                      day_of_week:
                        type: integer
                        minimum: 0
                        maximum: 6
                        description: Day of week (0=Sunday, 6=Saturday)
                      start_time:
                        type: string
                        example: '09:00'
                        description: Start time in HH:MM format
                      end_time:
                        type: string
                        example: '17:00'
                        description: End time in HH:MM format
                      slot_duration_minutes:
                        type: integer
                        default: 30
                        description: Default slot duration
                      location:
                        type: string
                        description: Default meeting location
                      meeting_platform:
                        type: string
                        enum:
                          - in_person
                          - zoom
                          - teams
                          - google_meet
                          - phone
                          - other
                date_overrides:
                  type: array
                  description: Specific date availability overrides (holidays, time off, etc.)
                  items:
                    type: object
                    required:
                      - date
                      - available
                    properties:
                      date:
                        type: string
                        format: date
                      available:
                        type: boolean
                        description: Whether available on this date
                      custom_hours:
                        type: object
                        properties:
                          start_time:
                            type: string
                            example: '10:00'
                          end_time:
                            type: string
                            example: '15:00'
      responses:
        '200':
          description: Availability schedule updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  advisor_id:
                    type: string
                    format: uuid
                  timezone:
                    type: string
                  updated_at:
                    type: string
                    format: date-time
                  message:
                    type: string
                    example: Availability schedule updated successfully
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
  /api/v1/agreements/internship:
    get:
      tags:
        - Agreements (BETA)
      summary: List internship agreements
      description: |
        **[BETA]** Retrieve internship agreements with filtering options.

        **Access**:
        - Students: See their own agreements
        - Employers: See agreements for their organization
        - University staff: See all agreements for their institution
      operationId: listInternshipAgreements
      security:
        - BearerAuth: []
      parameters:
        - name: status
          in: query
          description: Filter by agreement status
          schema:
            type: string
            enum:
              - draft
              - pending_signatures
              - partially_signed
              - fully_signed
              - active
              - completed
              - cancelled
              - expired
        - name: student_id
          in: query
          description: Filter by student (university staff only)
          schema:
            type: string
            format: uuid
        - name: employer_id
          in: query
          description: Filter by employer organization
          schema:
            type: string
            format: uuid
        - name: start_date_from
          in: query
          description: Filter agreements with start date from this date
          schema:
            type: string
            format: date
        - name: start_date_to
          in: query
          description: Filter agreements with start date until this date
          schema:
            type: string
            format: date
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
            minimum: 0
      responses:
        '200':
          description: Agreements retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  agreements:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        agreement_number:
                          type: string
                          example: AGR-2025-001234
                        student:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            name:
                              type: string
                            email:
                              type: string
                        employer:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            organization_name:
                              type: string
                            contact_name:
                              type: string
                            contact_email:
                              type: string
                        university:
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                            name:
                              type: string
                        position_title:
                          type: string
                        start_date:
                          type: string
                          format: date
                        end_date:
                          type: string
                          format: date
                        status:
                          type: string
                          enum:
                            - draft
                            - pending_signatures
                            - partially_signed
                            - fully_signed
                            - active
                            - completed
                            - cancelled
                            - expired
                        signatures:
                          type: object
                          properties:
                            student_signed:
                              type: boolean
                            employer_signed:
                              type: boolean
                            university_signed:
                              type: boolean
                        created_at:
                          type: string
                          format: date-time
                        updated_at:
                          type: string
                          format: date-time
                  total:
                    type: integer
                  limit:
                    type: integer
                  offset:
                    type: integer
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
    post:
      tags:
        - Agreements (BETA)
      summary: Create internship agreement
      description: |
        **[BETA]** Create a new three-way internship agreement between student, employer, and university.

        **Who can create**:
        - Students can initiate for themselves
        - University staff can create for any student
        - Employers can propose for specific students

        Agreement starts in `draft` status and requires signatures from all three parties.
      operationId: createInternshipAgreement
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - student_id
                - employer_id
                - position_title
                - start_date
                - end_date
              properties:
                student_id:
                  type: string
                  format: uuid
                  description: Student party to the agreement
                employer_id:
                  type: string
                  format: uuid
                  description: Employer organization ID
                employer_contact_id:
                  type: string
                  format: uuid
                  description: Specific contact person at employer
                position_title:
                  type: string
                  example: Software Engineering Intern
                position_description:
                  type: string
                  description: Detailed description of internship role
                department:
                  type: string
                  example: Engineering
                start_date:
                  type: string
                  format: date
                  example: '2025-06-01'
                end_date:
                  type: string
                  format: date
                  example: '2025-08-31'
                hours_per_week:
                  type: number
                  format: float
                  example: 40
                compensation:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - paid
                        - unpaid
                        - stipend
                        - academic_credit
                    amount:
                      type: number
                      format: float
                    currency:
                      type: string
                      example: USD
                    frequency:
                      type: string
                      enum:
                        - hourly
                        - weekly
                        - monthly
                        - total
                work_location:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - on_site
                        - remote
                        - hybrid
                    address:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                    country:
                      type: string
                learning_objectives:
                  type: array
                  description: Educational objectives and skills to be gained
                  items:
                    type: string
                  example:
                    - Gain experience in full-stack development
                    - Learn Agile methodologies
                supervisor:
                  type: object
                  properties:
                    name:
                      type: string
                    title:
                      type: string
                    email:
                      type: string
                      format: email
                    phone:
                      type: string
                additional_terms:
                  type: string
                  description: Any additional terms or conditions
                send_for_signatures:
                  type: boolean
                  default: false
                  description: Immediately send to all parties for signature
      responses:
        '201':
          description: Agreement created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  agreement_number:
                    type: string
                    example: AGR-2025-001234
                  status:
                    type: string
                    enum:
                      - draft
                      - pending_signatures
                  created_at:
                    type: string
                    format: date-time
                  signatures_required:
                    type: object
                    properties:
                      student:
                        type: boolean
                        example: true
                      employer:
                        type: boolean
                        example: true
                      university:
                        type: boolean
                        example: true
                  message:
                    type: string
                    example: Internship agreement created successfully. Awaiting signatures from all parties.
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
  /api/v1/agreements/internship/{id}:
    get:
      tags:
        - Agreements (BETA)
      summary: Get internship agreement details
      description: |
        **[BETA]** Retrieve complete details of a specific internship agreement.

        Returns full agreement content, signature status, and audit trail.
      operationId: getInternshipAgreement
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Agreement ID
      responses:
        '200':
          description: Agreement details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  agreement_number:
                    type: string
                    example: AGR-2025-001234
                  status:
                    type: string
                    enum:
                      - draft
                      - pending_signatures
                      - partially_signed
                      - fully_signed
                      - active
                      - completed
                      - cancelled
                      - expired
                  student:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      name:
                        type: string
                      email:
                        type: string
                        format: email
                      phone:
                        type: string
                      student_id_number:
                        type: string
                      cohort:
                        type: string
                  employer:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      organization_name:
                        type: string
                      contact_person:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                          name:
                            type: string
                          title:
                            type: string
                          email:
                            type: string
                          phone:
                            type: string
                      address:
                        type: string
                  university:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      name:
                        type: string
                      department:
                        type: string
                      coordinator:
                        type: object
                        properties:
                          name:
                            type: string
                          email:
                            type: string
                  internship_details:
                    type: object
                    properties:
                      position_title:
                        type: string
                      position_description:
                        type: string
                      department:
                        type: string
                      start_date:
                        type: string
                        format: date
                      end_date:
                        type: string
                        format: date
                      hours_per_week:
                        type: number
                      total_hours:
                        type: number
                      compensation:
                        type: object
                        properties:
                          type:
                            type: string
                            enum:
                              - paid
                              - unpaid
                              - stipend
                              - academic_credit
                          amount:
                            type: number
                          currency:
                            type: string
                          frequency:
                            type: string
                      work_location:
                        type: object
                        properties:
                          type:
                            type: string
                          address:
                            type: string
                          city:
                            type: string
                          state:
                            type: string
                          country:
                            type: string
                      learning_objectives:
                        type: array
                        items:
                          type: string
                      supervisor:
                        type: object
                        properties:
                          name:
                            type: string
                          title:
                            type: string
                          email:
                            type: string
                          phone:
                            type: string
                  signatures:
                    type: object
                    properties:
                      student:
                        type: object
                        properties:
                          signed:
                            type: boolean
                          signed_at:
                            type: string
                            format: date-time
                          signature_method:
                            type: string
                            enum:
                              - electronic
                              - digital
                              - wet_signature
                          ip_address:
                            type: string
                      employer:
                        type: object
                        properties:
                          signed:
                            type: boolean
                          signed_by_name:
                            type: string
                          signed_by_title:
                            type: string
                          signed_at:
                            type: string
                            format: date-time
                          signature_method:
                            type: string
                          ip_address:
                            type: string
                      university:
                        type: object
                        properties:
                          signed:
                            type: boolean
                          signed_by_name:
                            type: string
                          signed_by_title:
                            type: string
                          signed_at:
                            type: string
                            format: date-time
                          signature_method:
                            type: string
                          ip_address:
                            type: string
                  additional_terms:
                    type: string
                  audit_trail:
                    type: array
                    description: Complete history of agreement changes
                    items:
                      type: object
                      properties:
                        timestamp:
                          type: string
                          format: date-time
                        action:
                          type: string
                          enum:
                            - created
                            - modified
                            - signed
                            - notified
                            - cancelled
                            - completed
                        performed_by:
                          type: string
                        party:
                          type: string
                          enum:
                            - student
                            - employer
                            - university
                            - system
                        details:
                          type: string
                  documents:
                    type: array
                    description: Attached supporting documents
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        filename:
                          type: string
                        type:
                          type: string
                          enum:
                            - agreement_pdf
                            - resume
                            - offer_letter
                            - supporting_document
                            - other
                        uploaded_by:
                          type: string
                          enum:
                            - student
                            - employer
                            - university
                        uploaded_at:
                          type: string
                          format: date-time
                        url:
                          type: string
                          format: uri
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  expires_at:
                    type: string
                    format: date-time
                    description: Agreement expiration if not fully signed
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    put:
      tags:
        - Agreements (BETA)
      summary: Update internship agreement
      description: |
        **[BETA]** Modify internship agreement content.

        **Rules**:
        - Only `draft` or `pending_signatures` agreements can be modified
        - Once fully signed, agreements cannot be modified (create new version instead)
        - University staff can modify any field
        - Students/employers can only modify specific fields

        Modifying a partially signed agreement will reset all signatures.
      operationId: updateInternshipAgreement
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Agreement ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                position_title:
                  type: string
                position_description:
                  type: string
                department:
                  type: string
                start_date:
                  type: string
                  format: date
                end_date:
                  type: string
                  format: date
                hours_per_week:
                  type: number
                compensation:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - paid
                        - unpaid
                        - stipend
                        - academic_credit
                    amount:
                      type: number
                    currency:
                      type: string
                    frequency:
                      type: string
                work_location:
                  type: object
                  properties:
                    type:
                      type: string
                    address:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                learning_objectives:
                  type: array
                  items:
                    type: string
                supervisor:
                  type: object
                  properties:
                    name:
                      type: string
                    title:
                      type: string
                    email:
                      type: string
                    phone:
                      type: string
                additional_terms:
                  type: string
                reset_signatures:
                  type: boolean
                  default: true
                  description: Whether to reset signatures after modification
      responses:
        '200':
          description: Agreement updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  updated_at:
                    type: string
                    format: date-time
                  signatures_reset:
                    type: boolean
                  message:
                    type: string
                    example: Agreement updated successfully. All signatures have been reset.
        '400':
          description: Cannot modify agreement in current state
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid operation
                  message:
                    type: string
                    example: Cannot modify fully signed agreements. Create a new version instead.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    delete:
      tags:
        - Agreements (BETA)
      summary: Cancel internship agreement
      description: |
        **[BETA]** Cancel or void an internship agreement.

        **Rules**:
        - Draft agreements can be deleted
        - Pending/partially signed agreements can be cancelled
        - Fully signed active agreements require cancellation reason and notification to all parties
      operationId: cancelInternshipAgreement
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Agreement ID
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                cancellation_reason:
                  type: string
                  description: Reason for cancellation
                notify_parties:
                  type: boolean
                  default: true
                  description: Send cancellation notification to all parties
      responses:
        '200':
          description: Agreement cancelled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  status:
                    type: string
                    example: cancelled
                  cancelled_at:
                    type: string
                    format: date-time
                  message:
                    type: string
                    example: Agreement cancelled and all parties have been notified.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v1/agreements/internship/{id}/sign:
    post:
      tags:
        - Agreements (BETA)
      summary: Sign internship agreement
      description: |
        **[BETA]** Electronically sign an internship agreement.

        **Who can sign**:
        - Students sign on their own behalf
        - Employer representatives sign on behalf of their organization
        - University coordinators/staff sign on behalf of the institution

        Signatures are legally binding and captured with timestamp, IP address, and authentication data.
        Once all three parties have signed, the agreement status changes to `fully_signed` and becomes active.
      operationId: signInternshipAgreement
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Agreement ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - signature_acceptance
              properties:
                signature_acceptance:
                  type: boolean
                  description: Explicit acceptance of agreement terms
                  example: true
                signature_name:
                  type: string
                  description: Full name for signature (for employer/university signers)
                  example: Dr. Sarah Johnson
                signature_title:
                  type: string
                  description: Title/position of signer (for employer/university signers)
                  example: Director of Career Services
                signature_method:
                  type: string
                  enum:
                    - electronic
                    - digital
                    - wet_signature
                  default: electronic
                  description: Method of signature capture
                comments:
                  type: string
                  description: Optional comments from signer
                notify_other_parties:
                  type: boolean
                  default: true
                  description: Notify other parties that signature has been completed
      responses:
        '200':
          description: Agreement signed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  agreement_number:
                    type: string
                  signed_by:
                    type: string
                    enum:
                      - student
                      - employer
                      - university
                  signed_at:
                    type: string
                    format: date-time
                  signature_status:
                    type: object
                    properties:
                      student_signed:
                        type: boolean
                      employer_signed:
                        type: boolean
                      university_signed:
                        type: boolean
                      all_signed:
                        type: boolean
                  agreement_status:
                    type: string
                    enum:
                      - pending_signatures
                      - partially_signed
                      - fully_signed
                  next_signers:
                    type: array
                    description: Parties still need to sign
                    items:
                      type: string
                      enum:
                        - student
                        - employer
                        - university
                  message:
                    type: string
                    example: Agreement signed successfully. Awaiting signatures from employer and university.
        '400':
          description: Invalid signature request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Already signed
                  message:
                    type: string
                    example: You have already signed this agreement.
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          description: Not authorized to sign this agreement
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Forbidden
                  message:
                    type: string
                    example: You are not authorized to sign on behalf of this party.
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v1/agreements/internship/{id}/notify:
    post:
      tags:
        - Agreements (BETA)
      summary: Send agreement notifications
      description: |
        **[BETA]** Send notifications about the agreement to specified parties.

        **Use cases**:
        - Request signatures from parties who haven't signed
        - Send reminders about pending signatures
        - Notify about agreement updates or cancellations
        - Share final signed agreement with all parties

        **Access**: University staff have full notification capabilities. Students and employers
        can send limited notifications.
      operationId: notifyAgreementParties
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Agreement ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - recipients
                - notification_type
              properties:
                recipients:
                  type: array
                  description: Which parties to notify
                  items:
                    type: string
                    enum:
                      - student
                      - employer
                      - university
                      - all
                  example:
                    - student
                    - employer
                notification_type:
                  type: string
                  enum:
                    - signature_request
                    - signature_reminder
                    - agreement_update
                    - agreement_signed
                    - agreement_cancelled
                    - final_agreement
                  description: Type of notification to send
                subject:
                  type: string
                  description: Custom email subject (optional, defaults based on notification type)
                message:
                  type: string
                  description: Custom message to include in notification
                include_agreement_pdf:
                  type: boolean
                  default: true
                  description: Attach PDF version of agreement
                due_date:
                  type: string
                  format: date
                  description: Signature deadline (for signature requests/reminders)
      responses:
        '200':
          description: Notifications sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  notifications_sent:
                    type: array
                    items:
                      type: object
                      properties:
                        recipient:
                          type: string
                          enum:
                            - student
                            - employer
                            - university
                        email:
                          type: string
                        sent_at:
                          type: string
                          format: date-time
                        status:
                          type: string
                          enum:
                            - sent
                            - queued
                            - failed
                  message:
                    type: string
                    example: Notifications sent to 2 parties successfully.
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v1/agreements/internship/{id}/signatures:
    get:
      tags:
        - Agreements (BETA)
      summary: Get agreement signature status
      description: |
        **[BETA]** Retrieve detailed signature status and audit trail for an internship agreement.

        Shows which parties have signed, when they signed, and complete signature history.
      operationId: getAgreementSignatures
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Agreement ID
      responses:
        '200':
          description: Signature status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  agreement_id:
                    type: string
                    format: uuid
                  agreement_number:
                    type: string
                  overall_status:
                    type: string
                    enum:
                      - pending_signatures
                      - partially_signed
                      - fully_signed
                  signatures:
                    type: object
                    properties:
                      student:
                        type: object
                        properties:
                          required:
                            type: boolean
                            example: true
                          signed:
                            type: boolean
                          signer_name:
                            type: string
                          signed_at:
                            type: string
                            format: date-time
                          signature_method:
                            type: string
                            enum:
                              - electronic
                              - digital
                              - wet_signature
                          ip_address:
                            type: string
                          user_agent:
                            type: string
                          email_verified:
                            type: boolean
                          comments:
                            type: string
                      employer:
                        type: object
                        properties:
                          required:
                            type: boolean
                            example: true
                          signed:
                            type: boolean
                          signer_name:
                            type: string
                          signer_title:
                            type: string
                          organization_name:
                            type: string
                          signed_at:
                            type: string
                            format: date-time
                          signature_method:
                            type: string
                          ip_address:
                            type: string
                          user_agent:
                            type: string
                          email_verified:
                            type: boolean
                          comments:
                            type: string
                      university:
                        type: object
                        properties:
                          required:
                            type: boolean
                            example: true
                          signed:
                            type: boolean
                          signer_name:
                            type: string
                          signer_title:
                            type: string
                          department:
                            type: string
                          signed_at:
                            type: string
                            format: date-time
                          signature_method:
                            type: string
                          ip_address:
                            type: string
                          user_agent:
                            type: string
                          email_verified:
                            type: boolean
                          comments:
                            type: string
                  pending_signatures:
                    type: array
                    description: Parties that still need to sign
                    items:
                      type: string
                      enum:
                        - student
                        - employer
                        - university
                  signature_timeline:
                    type: array
                    description: Chronological signature history
                    items:
                      type: object
                      properties:
                        party:
                          type: string
                          enum:
                            - student
                            - employer
                            - university
                        signer_name:
                          type: string
                        action:
                          type: string
                          enum:
                            - signed
                            - unsigned
                            - signature_reset
                        timestamp:
                          type: string
                          format: date-time
                        reason:
                          type: string
                  fully_signed_at:
                    type: string
                    format: date-time
                    description: Timestamp when all parties completed signing
                  signature_expiration:
                    type: string
                    format: date-time
                    description: Deadline for completing signatures
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v1/employers/register:
    post:
      tags:
        - Employers (BETA)
      summary: Register new employer organization
      description: |
        **[BETA]** Register a new employer organization on the CareerOS platform.

        This endpoint creates a new employer account with initial company profile,
        primary contact, and access credentials. The registration can be initiated by:
        - Employers self-registering through the platform
        - University staff inviting employers
        - System administrators creating employer accounts

        Upon successful registration, an activation email is sent to the primary contact.
      operationId: registerEmployer
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - organization_name
                - industry
                - primary_contact
              properties:
                organization_name:
                  type: string
                  description: Official company/organization name
                  example: Tech Innovations Inc.
                legal_name:
                  type: string
                  description: Legal entity name (if different from organization name)
                  example: Tech Innovations Corporation
                industry:
                  type: string
                  description: Primary industry sector
                  example: Technology
                company_size:
                  type: string
                  enum:
                    - startup_1_10
                    - small_11_50
                    - medium_51_200
                    - large_201_500
                    - enterprise_501_plus
                  description: Organization size range
                founded_year:
                  type: integer
                  example: 2015
                  minimum: 1800
                website:
                  type: string
                  format: uri
                  example: https://www.techinnovations.com
                description:
                  type: string
                  description: Brief company description
                  example: Leading provider of innovative software solutions
                headquarters:
                  type: object
                  required:
                    - address
                    - city
                    - country
                  properties:
                    address:
                      type: string
                      example: 123 Innovation Drive
                    address_line_2:
                      type: string
                    city:
                      type: string
                      example: San Francisco
                    state:
                      type: string
                      example: CA
                    postal_code:
                      type: string
                      example: '94105'
                    country:
                      type: string
                      example: United States
                primary_contact:
                  type: object
                  required:
                    - first_name
                    - last_name
                    - email
                  properties:
                    first_name:
                      type: string
                      example: Sarah
                    last_name:
                      type: string
                      example: Johnson
                    email:
                      type: string
                      format: email
                      example: sarah.johnson@techinnovations.com
                    phone:
                      type: string
                      example: +1-415-555-0123
                    title:
                      type: string
                      example: Recruiting Manager
                    department:
                      type: string
                      example: Human Resources
                registration_source:
                  type: string
                  enum:
                    - self_registration
                    - university_invitation
                    - career_fair
                    - partner_referral
                    - admin_created
                  default: self_registration
                universities:
                  type: array
                  description: Universities the employer wants to connect with
                  items:
                    type: string
                    format: uuid
                agreed_to_terms:
                  type: boolean
                  description: Acceptance of terms of service
                  example: true
      responses:
        '201':
          description: Employer registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  employer_id:
                    type: string
                    format: uuid
                  organization_name:
                    type: string
                  status:
                    type: string
                    enum:
                      - pending_verification
                      - active
                    example: pending_verification
                  primary_contact:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      email:
                        type: string
                      activation_sent:
                        type: boolean
                  activation_url:
                    type: string
                    format: uri
                    description: URL for account activation (included in email)
                  created_at:
                    type: string
                    format: date-time
                  message:
                    type: string
                    example: Employer registered successfully. Activation email sent to primary contact.
        '400':
          $ref: '#/components/responses/ValidationError'
        '409':
          description: Organization already registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Duplicate registration
                  message:
                    type: string
                    example: An organization with this name or email is already registered.
                  existing_employer_id:
                    type: string
                    format: uuid
  /api/v1/employers/profile:
    get:
      tags:
        - Employers (BETA)
      summary: Get employer profile
      description: |
        **[BETA]** Retrieve the employer organization profile.

        Returns complete company information including branding, locations, benefits,
        and public-facing details visible to students.
      operationId: getEmployerProfile
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Employer profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  organization_name:
                    type: string
                  legal_name:
                    type: string
                  slug:
                    type: string
                    example: tech-innovations-inc
                    description: URL-friendly identifier
                  status:
                    type: string
                    enum:
                      - pending_verification
                      - active
                      - suspended
                      - inactive
                  industry:
                    type: string
                  company_size:
                    type: string
                    enum:
                      - startup_1_10
                      - small_11_50
                      - medium_51_200
                      - large_201_500
                      - enterprise_501_plus
                  founded_year:
                    type: integer
                  website:
                    type: string
                    format: uri
                  description:
                    type: string
                  logo_url:
                    type: string
                    format: uri
                  banner_url:
                    type: string
                    format: uri
                  social_media:
                    type: object
                    properties:
                      linkedin:
                        type: string
                        format: uri
                      twitter:
                        type: string
                      facebook:
                        type: string
                      instagram:
                        type: string
                  headquarters:
                    type: object
                    properties:
                      address:
                        type: string
                      city:
                        type: string
                      state:
                        type: string
                      country:
                        type: string
                      postal_code:
                        type: string
                  additional_locations:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        location_name:
                          type: string
                        address:
                          type: string
                        city:
                          type: string
                        state:
                          type: string
                        country:
                          type: string
                  culture_values:
                    type: array
                    description: Company culture and values
                    items:
                      type: string
                    example:
                      - Innovation
                      - Collaboration
                      - Diversity & Inclusion
                  benefits:
                    type: array
                    description: Employee benefits offered
                    items:
                      type: string
                    example:
                      - Health Insurance
                      - 401k Matching
                      - Remote Work Options
                  diversity_statement:
                    type: string
                  statistics:
                    type: object
                    properties:
                      active_job_postings:
                        type: integer
                      total_hires_this_year:
                        type: integer
                      student_applications:
                        type: integer
                  partner_universities:
                    type: array
                    items:
                      type: object
                      properties:
                        university_id:
                          type: string
                          format: uuid
                        university_name:
                          type: string
                        partnership_level:
                          type: string
                          enum:
                            - basic
                            - preferred
                            - exclusive
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    put:
      tags:
        - Employers (BETA)
      summary: Update employer profile
      description: |
        **[BETA]** Update employer organization profile information.

        Employer admins can update company details, branding, locations, and public-facing content.
      operationId: updateEmployerProfile
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organization_name:
                  type: string
                industry:
                  type: string
                company_size:
                  type: string
                  enum:
                    - startup_1_10
                    - small_11_50
                    - medium_51_200
                    - large_201_500
                    - enterprise_501_plus
                founded_year:
                  type: integer
                website:
                  type: string
                  format: uri
                description:
                  type: string
                logo_url:
                  type: string
                  format: uri
                banner_url:
                  type: string
                  format: uri
                social_media:
                  type: object
                  properties:
                    linkedin:
                      type: string
                    twitter:
                      type: string
                    facebook:
                      type: string
                    instagram:
                      type: string
                headquarters:
                  type: object
                  properties:
                    address:
                      type: string
                    city:
                      type: string
                    state:
                      type: string
                    country:
                      type: string
                    postal_code:
                      type: string
                culture_values:
                  type: array
                  items:
                    type: string
                benefits:
                  type: array
                  items:
                    type: string
                diversity_statement:
                  type: string
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  updated_at:
                    type: string
                    format: date-time
                  message:
                    type: string
                    example: Employer profile updated successfully
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
  /api/v1/employers/users:
    get:
      tags:
        - Employers (BETA)
      summary: List employer users
      description: |
        **[BETA]** Retrieve all users associated with the employer organization.

        Returns company recruiters, HR contacts, and other authorized users who can
        access the employer portal and manage job postings, applications, and events.
      operationId: listEmployerUsers
      security:
        - BearerAuth: []
      parameters:
        - name: status
          in: query
          description: Filter by user status
          schema:
            type: string
            enum:
              - active
              - inactive
              - pending_invitation
        - name: role
          in: query
          description: Filter by user role
          schema:
            type: string
            enum:
              - admin
              - recruiter
              - hiring_manager
              - viewer
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Users retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        email:
                          type: string
                          format: email
                        first_name:
                          type: string
                        last_name:
                          type: string
                        title:
                          type: string
                        department:
                          type: string
                        phone:
                          type: string
                        role:
                          type: string
                          enum:
                            - admin
                            - recruiter
                            - hiring_manager
                            - viewer
                          description: |
                            - admin: Full access to employer account
                            - recruiter: Can manage jobs and view applications
                            - hiring_manager: Can view applications for their department
                            - viewer: Read-only access
                        status:
                          type: string
                          enum:
                            - active
                            - inactive
                            - pending_invitation
                        permissions:
                          type: object
                          properties:
                            can_post_jobs:
                              type: boolean
                            can_view_applications:
                              type: boolean
                            can_message_students:
                              type: boolean
                            can_manage_events:
                              type: boolean
                            can_manage_users:
                              type: boolean
                        last_login:
                          type: string
                          format: date-time
                        created_at:
                          type: string
                          format: date-time
                  total:
                    type: integer
                  limit:
                    type: integer
                  offset:
                    type: integer
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
    post:
      tags:
        - Employers (BETA)
      summary: Add employer user
      description: |
        **[BETA]** Add a new user to the employer organization.

        Sends an invitation email to the new user with account activation link.
        Only employer admins can add new users.
      operationId: addEmployerUser
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - first_name
                - last_name
                - role
              properties:
                email:
                  type: string
                  format: email
                  example: john.doe@techinnovations.com
                first_name:
                  type: string
                  example: John
                last_name:
                  type: string
                  example: Doe
                title:
                  type: string
                  example: Senior Recruiter
                department:
                  type: string
                  example: Human Resources
                phone:
                  type: string
                  example: +1-415-555-0199
                role:
                  type: string
                  enum:
                    - admin
                    - recruiter
                    - hiring_manager
                    - viewer
                  default: recruiter
                permissions:
                  type: object
                  description: Custom permissions (optional, defaults based on role)
                  properties:
                    can_post_jobs:
                      type: boolean
                    can_view_applications:
                      type: boolean
                    can_message_students:
                      type: boolean
                    can_manage_events:
                      type: boolean
                    can_manage_users:
                      type: boolean
                send_invitation_email:
                  type: boolean
                  default: true
                custom_message:
                  type: string
                  description: Custom message to include in invitation email
      responses:
        '201':
          description: User added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  email:
                    type: string
                  first_name:
                    type: string
                  last_name:
                    type: string
                  role:
                    type: string
                  status:
                    type: string
                    example: pending_invitation
                  invitation_sent:
                    type: boolean
                  invitation_url:
                    type: string
                    format: uri
                  created_at:
                    type: string
                    format: date-time
                  message:
                    type: string
                    example: User added successfully. Invitation email sent.
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '409':
          description: User already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User exists
                  message:
                    type: string
                    example: A user with this email is already associated with your organization.
  /api/v1/employers/users/{user_id}:
    get:
      tags:
        - Employers (BETA)
      summary: Get employer user details
      description: |
        **[BETA]** Retrieve detailed information about a specific employer user.
      operationId: getEmployerUser
      security:
        - BearerAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: User ID
      responses:
        '200':
          description: User details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  email:
                    type: string
                  first_name:
                    type: string
                  last_name:
                    type: string
                  title:
                    type: string
                  department:
                    type: string
                  phone:
                    type: string
                  role:
                    type: string
                    enum:
                      - admin
                      - recruiter
                      - hiring_manager
                      - viewer
                  status:
                    type: string
                    enum:
                      - active
                      - inactive
                      - pending_invitation
                  permissions:
                    type: object
                    properties:
                      can_post_jobs:
                        type: boolean
                      can_view_applications:
                        type: boolean
                      can_message_students:
                        type: boolean
                      can_manage_events:
                        type: boolean
                      can_manage_users:
                        type: boolean
                  activity:
                    type: object
                    properties:
                      jobs_posted:
                        type: integer
                      applications_reviewed:
                        type: integer
                      students_messaged:
                        type: integer
                      last_login:
                        type: string
                        format: date-time
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    put:
      tags:
        - Employers (BETA)
      summary: Update employer user
      description: |
        **[BETA]** Update employer user information and permissions.

        Admins can update any user. Users can update their own profile (limited fields).
      operationId: updateEmployerUser
      security:
        - BearerAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: User ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                title:
                  type: string
                department:
                  type: string
                phone:
                  type: string
                role:
                  type: string
                  enum:
                    - admin
                    - recruiter
                    - hiring_manager
                    - viewer
                  description: Admin only
                status:
                  type: string
                  enum:
                    - active
                    - inactive
                  description: Admin only
                permissions:
                  type: object
                  description: Admin only
                  properties:
                    can_post_jobs:
                      type: boolean
                    can_view_applications:
                      type: boolean
                    can_message_students:
                      type: boolean
                    can_manage_events:
                      type: boolean
                    can_manage_users:
                      type: boolean
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  updated_at:
                    type: string
                    format: date-time
                  message:
                    type: string
                    example: User updated successfully
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    delete:
      tags:
        - Employers (BETA)
      summary: Remove employer user
      description: |
        **[BETA]** Remove a user from the employer organization.

        User's access is immediately revoked. This action cannot be undone.
        Admins only. Cannot remove the last admin user.
      operationId: removeEmployerUser
      security:
        - BearerAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: User ID
      responses:
        '200':
          description: User removed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  removed_at:
                    type: string
                    format: date-time
                  message:
                    type: string
                    example: User removed from organization successfully
        '400':
          description: Cannot remove user
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Cannot remove user
                  message:
                    type: string
                    example: Cannot remove the last admin user from the organization
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v1/employers/settings:
    get:
      tags:
        - Employers (BETA)
      summary: Get employer settings
      description: |
        **[BETA]** Retrieve employer organization settings and preferences.

        Includes notification preferences, integration settings, and account configuration.
      operationId: getEmployerSettings
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Settings retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  notifications:
                    type: object
                    properties:
                      new_applications:
                        type: boolean
                        description: Notify when students apply to jobs
                      application_status_changes:
                        type: boolean
                      event_registrations:
                        type: boolean
                      system_announcements:
                        type: boolean
                      notification_email:
                        type: string
                        format: email
                        description: Email for notifications (if different from primary)
                  application_settings:
                    type: object
                    properties:
                      require_cover_letter:
                        type: boolean
                      require_resume:
                        type: boolean
                      custom_application_questions:
                        type: boolean
                      auto_reply_enabled:
                        type: boolean
                      auto_reply_message:
                        type: string
                  branding:
                    type: object
                    properties:
                      primary_color:
                        type: string
                        example: '#0066CC'
                      custom_email_template:
                        type: boolean
                      email_signature:
                        type: string
                  integrations:
                    type: object
                    properties:
                      ats_integration:
                        type: object
                        properties:
                          enabled:
                            type: boolean
                          provider:
                            type: string
                            enum:
                              - greenhouse
                              - lever
                              - workday
                              - taleo
                              - custom
                          sync_enabled:
                            type: boolean
                      calendar_integration:
                        type: object
                        properties:
                          enabled:
                            type: boolean
                          provider:
                            type: string
                            enum:
                              - google
                              - outlook
                              - custom
                  privacy:
                    type: object
                    properties:
                      show_salary_ranges:
                        type: boolean
                      public_profile:
                        type: boolean
                        description: Make company profile visible to all students
                      share_application_data:
                        type: boolean
                  partnership_preferences:
                    type: object
                    properties:
                      preferred_universities:
                        type: array
                        items:
                          type: string
                          format: uuid
                      target_student_levels:
                        type: array
                        items:
                          type: string
                          enum:
                            - freshman
                            - sophomore
                            - junior
                            - senior
                            - graduate
                            - alumni
                      interested_in_career_fairs:
                        type: boolean
                      interested_in_on_campus_recruiting:
                        type: boolean
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
    put:
      tags:
        - Employers (BETA)
      summary: Update employer settings
      description: |
        **[BETA]** Update employer organization settings and preferences.

        Admin users can modify all settings. Other users may have limited access.
      operationId: updateEmployerSettings
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                notifications:
                  type: object
                  properties:
                    new_applications:
                      type: boolean
                    application_status_changes:
                      type: boolean
                    event_registrations:
                      type: boolean
                    system_announcements:
                      type: boolean
                    notification_email:
                      type: string
                      format: email
                application_settings:
                  type: object
                  properties:
                    require_cover_letter:
                      type: boolean
                    require_resume:
                      type: boolean
                    custom_application_questions:
                      type: boolean
                    auto_reply_enabled:
                      type: boolean
                    auto_reply_message:
                      type: string
                branding:
                  type: object
                  properties:
                    primary_color:
                      type: string
                    custom_email_template:
                      type: boolean
                    email_signature:
                      type: string
                privacy:
                  type: object
                  properties:
                    show_salary_ranges:
                      type: boolean
                    public_profile:
                      type: boolean
                    share_application_data:
                      type: boolean
                partnership_preferences:
                  type: object
                  properties:
                    preferred_universities:
                      type: array
                      items:
                        type: string
                        format: uuid
                    target_student_levels:
                      type: array
                      items:
                        type: string
                    interested_in_career_fairs:
                      type: boolean
                    interested_in_on_campus_recruiting:
                      type: boolean
      responses:
        '200':
          description: Settings updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  updated_at:
                    type: string
                    format: date-time
                  message:
                    type: string
                    example: Settings updated successfully
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
  /api/v1/custom-fields:
    get:
      tags:
        - Custom Fields (BETA)
      summary: List custom field metadata definitions
      description: |
        **[BETA]** Retrieve custom field metadata definitions for a specific entity type.

        **Note:** Custom fields can be used WITHOUT pre-defining them. Simply include any key-value pair in your
        entity requests (students, jobs, companies, applications, events, contacts, agreements, employers, appointments,
        resumes, alumni) and they will be stored and returned automatically.

        This API is **optional** and provides metadata management for:
        - Field labels and help text for UI display
        - Validation rules (min/max length, patterns, etc.)
        - Field type definitions (text, number, date, select, etc.)
        - Field visibility controls
        - Search/filter configuration

        **Use this API when you need:** UI metadata, validation rules, or field type definitions.
        **Skip this API if:** You just want to store arbitrary key-value pairs (they work out of the box!).

        **Access**: University administrators only
      operationId: listCustomFields
      security:
        - BearerAuth: []
      parameters:
        - name: entity_type
          in: query
          required: true
          description: Entity type to retrieve custom fields for
          schema:
            type: string
            enum:
              - student
              - job
              - company
              - application
              - event
              - contact
              - internship_agreement
              - employer
          example: student
        - name: status
          in: query
          description: Filter by field status
          schema:
            type: string
            enum:
              - active
              - inactive
              - archived
            default: active
        - name: include_values
          in: query
          description: Include dropdown values for select fields
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Custom fields retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  entity_type:
                    type: string
                    enum:
                      - student
                      - job
                      - company
                      - application
                      - event
                      - contact
                      - internship_agreement
                      - employer
                  custom_fields:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        field_name:
                          type: string
                          example: preferred_industry
                        display_label:
                          type: string
                          example: Preferred Industry
                        field_type:
                          type: string
                          enum:
                            - text
                            - textarea
                            - number
                            - date
                            - boolean
                            - single_select
                            - multi_select
                            - url
                            - email
                            - phone
                          description: |
                            - text: Single line text input
                            - textarea: Multi-line text input
                            - number: Numeric value
                            - date: Date picker
                            - boolean: Yes/No checkbox
                            - single_select: Dropdown with single selection
                            - multi_select: Dropdown with multiple selections
                            - url: URL/link field
                            - email: Email address field
                            - phone: Phone number field
                        is_required:
                          type: boolean
                          description: Whether field is required
                        is_searchable:
                          type: boolean
                          description: Whether field can be used in search/filters
                        is_visible_to_students:
                          type: boolean
                          description: Whether students can see this field
                        is_visible_to_employers:
                          type: boolean
                          description: Whether employers can see this field
                        default_value:
                          type: string
                          description: Default value for the field
                        validation_rules:
                          type: object
                          properties:
                            min_length:
                              type: integer
                            max_length:
                              type: integer
                            pattern:
                              type: string
                              description: Regex pattern for validation
                            min_value:
                              type: number
                            max_value:
                              type: number
                        help_text:
                          type: string
                          description: Help text shown to users
                        sort_order:
                          type: integer
                          description: Display order of field
                        status:
                          type: string
                          enum:
                            - active
                            - inactive
                            - archived
                        created_at:
                          type: string
                          format: date-time
                        updated_at:
                          type: string
                          format: date-time
                  total:
                    type: integer
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
    post:
      tags:
        - Custom Fields (BETA)
      summary: Create custom field metadata definition
      description: |
        **[BETA]** Create metadata for a custom field (optional).

        **Remember:** You don't need to define custom fields to use them! Any key-value pair sent in entity
        requests will be automatically stored and returned.

        Create metadata definitions when you need:
        - UI labels and help text
        - Validation rules (e.g., min/max values, regex patterns)
        - Field type specifications (text, number, date, select, etc.)
        - Visibility controls (hide from students/employers)
        - Search/filter configuration

        **Access**: University administrators only
      operationId: createCustomField
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - entity_type
                - field_name
                - display_label
                - field_type
              properties:
                entity_type:
                  type: string
                  enum:
                    - student
                    - job
                    - company
                    - application
                    - event
                    - contact
                    - internship_agreement
                    - employer
                  example: student
                field_name:
                  type: string
                  description: Internal field name (alphanumeric and underscores only)
                  example: preferred_industry
                  pattern: ^[a-z0-9_]+$
                display_label:
                  type: string
                  example: Preferred Industry
                field_type:
                  type: string
                  enum:
                    - text
                    - textarea
                    - number
                    - date
                    - boolean
                    - single_select
                    - multi_select
                    - url
                    - email
                    - phone
                is_required:
                  type: boolean
                  default: false
                is_searchable:
                  type: boolean
                  default: true
                is_visible_to_students:
                  type: boolean
                  default: true
                is_visible_to_employers:
                  type: boolean
                  default: false
                default_value:
                  type: string
                validation_rules:
                  type: object
                  properties:
                    min_length:
                      type: integer
                    max_length:
                      type: integer
                    pattern:
                      type: string
                    min_value:
                      type: number
                    max_value:
                      type: number
                help_text:
                  type: string
                sort_order:
                  type: integer
      responses:
        '201':
          description: Custom field created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  field_name:
                    type: string
                  display_label:
                    type: string
                  field_type:
                    type: string
                  status:
                    type: string
                    example: active
                  created_at:
                    type: string
                    format: date-time
                  message:
                    type: string
                    example: Custom field created successfully
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '409':
          description: Field name already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Duplicate field name
                  message:
                    type: string
                    example: A custom field with this name already exists for this entity type
  /api/v1/custom-fields/{id}:
    get:
      tags:
        - Custom Fields (BETA)
      summary: Get custom field definition
      description: |
        **[BETA]** Retrieve a specific custom field definition including all dropdown values.
      operationId: getCustomField
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Custom field ID
      responses:
        '200':
          description: Custom field retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  entity_type:
                    type: string
                  field_name:
                    type: string
                  display_label:
                    type: string
                  field_type:
                    type: string
                  is_required:
                    type: boolean
                  is_searchable:
                    type: boolean
                  is_visible_to_students:
                    type: boolean
                  is_visible_to_employers:
                    type: boolean
                  default_value:
                    type: string
                  validation_rules:
                    type: object
                  help_text:
                    type: string
                  sort_order:
                    type: integer
                  status:
                    type: string
                  usage_statistics:
                    type: object
                    properties:
                      entities_with_value:
                        type: integer
                        description: Number of entities that have a value for this field
                      most_common_values:
                        type: array
                        items:
                          type: object
                          properties:
                            value:
                              type: string
                            count:
                              type: integer
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    put:
      tags:
        - Custom Fields (BETA)
      summary: Update custom field definition
      description: |
        **[BETA]** Update a custom field definition.

        **Note**: Changing field_type may result in data loss for existing values.
      operationId: updateCustomField
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Custom field ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                display_label:
                  type: string
                is_required:
                  type: boolean
                is_searchable:
                  type: boolean
                is_visible_to_students:
                  type: boolean
                is_visible_to_employers:
                  type: boolean
                default_value:
                  type: string
                validation_rules:
                  type: object
                help_text:
                  type: string
                sort_order:
                  type: integer
                status:
                  type: string
                  enum:
                    - active
                    - inactive
                    - archived
      responses:
        '200':
          description: Custom field updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  updated_at:
                    type: string
                    format: date-time
                  message:
                    type: string
                    example: Custom field updated successfully
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    delete:
      tags:
        - Custom Fields (BETA)
      summary: Delete custom field definition
      description: |
        **[BETA]** Delete a custom field definition.

        **Warning**: This will remove the field and all associated data from all entities.
        This action cannot be undone. Consider setting status to 'archived' instead.
      operationId: deleteCustomField
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Custom field ID
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                confirm_deletion:
                  type: boolean
                  description: Must be true to confirm deletion
                  example: true
      responses:
        '200':
          description: Custom field deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  deleted_at:
                    type: string
                    format: date-time
                  entities_affected:
                    type: integer
                    description: Number of entities that had values for this field
                  message:
                    type: string
                    example: Custom field and all associated data deleted successfully
        '400':
          description: Confirmation required
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Confirmation required
                  message:
                    type: string
                    example: Must confirm deletion by setting confirm_deletion to true
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v2/university/students:
    get:
      tags:
        - Advisor
      summary: Get students by university
      description: Retrieve all students in the advisor's university with filtering options
      operationId: getStudentsByUniversity
      security:
        - BearerAuth: []
      parameters:
        - name: cohort_ids
          in: query
          description: Filter by cohort IDs (comma-separated)
          schema:
            type: string
        - name: search
          in: query
          description: Search by student name or email
          schema:
            type: string
        - name: tags
          in: query
          description: Filter by tags (comma-separated)
          schema:
            type: string
        - name: graduation_year
          in: query
          description: Filter by graduation year
          schema:
            type: integer
        - name: program
          in: query
          description: Filter by program
          schema:
            type: string
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/Offset'
      responses:
        '200':
          description: Students retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  students:
                    type: array
                    items:
                      $ref: '#/components/schemas/Student'
                  total:
                    type: integer
                  limit:
                    type: integer
                  offset:
                    type: integer
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
  /api/v2/university/students/{id}/summary:
    get:
      tags:
        - Advisor
      summary: Get student AI summary
      description: Get AI-generated summary of a student's profile and activities
      operationId: getStudentAISummary
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Student ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Student summary retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  summary:
                    type: string
                    description: AI-generated summary of student profile
                  key_achievements:
                    type: array
                    items:
                      type: string
                  recommendations:
                    type: array
                    items:
                      type: string
                  activity_level:
                    type: string
                    enum:
                      - low
                      - medium
                      - high
                  last_updated:
                    type: string
                    format: date-time
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v2/university/students/{id}/contacts:
    get:
      tags:
        - Advisor
      summary: Get student contacts
      description: Retrieve all contacts for a specific student
      operationId: getStudentContacts
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Student ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Student contacts retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v2/university/student/{id}/notes:
    get:
      tags:
        - Advisor
      summary: Get student notes
      description: Retrieve all notes for a specific student (advisor-only)
      operationId: getStudentNotes
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Student ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Notes retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    content:
                      type: string
                    author_id:
                      type: string
                      format: uuid
                    author_name:
                      type: string
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
    post:
      tags:
        - Advisor
      summary: Create student note
      description: Add a new note for a student (advisor-only)
      operationId: createStudentNote
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Student ID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
                  description: Note content
      responses:
        '201':
          description: Note created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  message:
                    type: string
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v2/university/analytics/networking:
    get:
      tags:
        - Advisor
      summary: Get networking statistics
      description: Retrieve networking analytics for the university/cohort
      operationId: getNetworkingStats
      security:
        - BearerAuth: []
      parameters:
        - name: cohort_ids
          in: query
          description: Filter by cohort IDs (comma-separated)
          schema:
            type: string
        - name: date_from
          in: query
          description: Start date for analytics
          schema:
            type: string
            format: date
        - name: date_to
          in: query
          description: End date for analytics
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Networking statistics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_connections:
                    type: integer
                    description: Total connections made
                  total_messages:
                    type: integer
                    description: Total messages sent
                  avg_connections_per_student:
                    type: number
                    format: float
                  avg_messages_per_student:
                    type: number
                    format: float
                  top_networkers:
                    type: array
                    items:
                      type: object
                      properties:
                        student_id:
                          type: string
                          format: uuid
                        student_name:
                          type: string
                        connections_count:
                          type: integer
                  connection_trends:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                        count:
                          type: integer
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
  /api/v2/university/analytics/companies/top:
    get:
      tags:
        - Advisor
      summary: Get top companies analytics
      description: Retrieve analytics about top companies students are targeting
      operationId: getTopCompaniesWithStudents
      security:
        - BearerAuth: []
      parameters:
        - name: cohort_ids
          in: query
          description: Filter by cohort IDs (comma-separated)
          schema:
            type: string
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          description: Company analytics retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  companies:
                    type: array
                    items:
                      type: object
                      properties:
                        company_id:
                          type: string
                          format: uuid
                        company_name:
                          type: string
                        logo_url:
                          type: string
                        industry:
                          type: string
                        student_count:
                          type: integer
                          description: Number of students targeting this company
                        applications_count:
                          type: integer
                          description: Number of applications to this company
                        saves_count:
                          type: integer
                          description: Number of students who saved this company
                  total:
                    type: integer
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
  /api/v2/university/advisors/with-cohorts:
    get:
      tags:
        - Advisor
      summary: Get advisors with their cohorts
      description: Retrieve all advisors in the university with their assigned cohorts
      operationId: getAdvisorsWithCohorts
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Advisors retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    advisor_id:
                      type: string
                      format: uuid
                    name:
                      type: string
                    email:
                      type: string
                    profile_picture:
                      type: string
                      format: uri
                    cohorts:
                      type: array
                      items:
                        type: object
                        properties:
                          cohort_id:
                            type: string
                            format: uuid
                          cohort_name:
                            type: string
                          student_count:
                            type: integer
                    is_external:
                      type: boolean
                      description: Whether the advisor is an external advisor
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
  /api/v2/advisor/reports/cohort:
    get:
      tags:
        - Advisor
      summary: Get cohort-level report
      description: |
        Retrieve comprehensive analytics and reports for a specific cohort.

        This report provides advisors with detailed insights into cohort performance,
        including engagement metrics, application statistics, networking activities,
        resume development, and top targeted companies. Ideal for identifying at-risk
        students, measuring program effectiveness, and data-driven decision making.

        Supports multiple export formats (JSON, CSV, PDF) for presentations,
        stakeholder reporting, and integration with institutional analytics systems.
      operationId: getCohortReport
      security:
        - BearerAuth: []
      parameters:
        - name: cohort_id
          in: query
          required: true
          description: Cohort ID to generate report for
          schema:
            type: string
            format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        - name: start_date
          in: query
          description: Start date for report period (defaults to semester start if not specified)
          schema:
            type: string
            format: date
          example: '2025-09-01'
        - name: end_date
          in: query
          description: End date for report period (defaults to today if not specified)
          schema:
            type: string
            format: date
          example: '2025-10-15'
        - name: format
          in: query
          description: Response format for the report
          schema:
            type: string
            enum:
              - json
              - csv
              - pdf
            default: json
          example: json
        - name: include_student_details
          in: query
          description: Include anonymized student-level details in CSV/PDF exports
          schema:
            type: boolean
            default: false
        - name: compare_to_previous_period
          in: query
          description: Include comparison with previous period (JSON format only)
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Cohort report retrieved successfully
          headers:
            Content-Disposition:
              description: Attachment header for CSV and PDF formats
              schema:
                type: string
              example: attachment; filename=cohort_report_class-of-2025_2025-10-15.pdf
          content:
            application/json:
              schema:
                type: object
                properties:
                  cohort:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      name:
                        type: string
                      total_students:
                        type: integer
                  period:
                    type: object
                    properties:
                      start_date:
                        type: string
                        format: date
                      end_date:
                        type: string
                        format: date
                  engagement_metrics:
                    type: object
                    properties:
                      active_students:
                        type: integer
                        description: Students active in the period
                      total_logins:
                        type: integer
                      avg_session_duration_minutes:
                        type: number
                        format: float
                  application_metrics:
                    type: object
                    properties:
                      total_applications:
                        type: integer
                      students_with_applications:
                        type: integer
                      avg_applications_per_student:
                        type: number
                        format: float
                      applications_by_status:
                        type: object
                        properties:
                          applied:
                            type: integer
                          interviewing:
                            type: integer
                          offered:
                            type: integer
                          accepted:
                            type: integer
                  networking_metrics:
                    type: object
                    properties:
                      total_contacts:
                        type: integer
                      students_networking:
                        type: integer
                      avg_contacts_per_student:
                        type: number
                        format: float
                      events_attended:
                        type: integer
                  resume_metrics:
                    type: object
                    properties:
                      students_with_resumes:
                        type: integer
                      total_resumes:
                        type: integer
                      avg_resume_score:
                        type: number
                        format: float
                        nullable: true
                      resumes_reviewed:
                        type: integer
                  top_companies:
                    type: array
                    description: Most targeted companies by cohort
                    items:
                      type: object
                      properties:
                        company_name:
                          type: string
                        applications:
                          type: integer
                        students_applied:
                          type: integer
                  appointment_metrics:
                    type: object
                    properties:
                      total_appointments:
                        type: integer
                      students_with_appointments:
                        type: integer
                      avg_appointments_per_student:
                        type: number
                        format: float
            text/csv:
              schema:
                type: string
                format: binary
              example: |
                Cohort Report
                Cohort Name,Total Students,Period Start,Period End
                Class of 2025,150,2025-09-01,2025-10-15

                Engagement Metrics
                Active Students,Total Logins,Avg Session Duration (min)
                120,1450,18.5

                Application Metrics
                Total Applications,Students with Applications,Avg per Student,Applied,Interviewing,Offered,Accepted
                342,95,3.6,250,45,30,17

                Networking Metrics
                Total Contacts,Students Networking,Avg Contacts per Student,Events Attended
                480,78,6.2,125

                Resume Metrics
                Students with Resumes,Total Resumes,Avg Resume Score,Resumes Reviewed
                130,185,78.5,92

                Appointment Metrics
                Total Appointments,Students with Appointments,Avg per Student
                215,88,2.4

                Top Companies
                Company Name,Applications,Students Applied
                Google,45,32
                Microsoft,38,28
                Amazon,35,25
            application/pdf:
              schema:
                type: string
                format: binary
                description: |
                  PDF formatted cohort report with comprehensive visualizations including:
                  - Engagement trends over time
                  - Application funnel metrics
                  - Top companies chart
                  - Student activity heatmap
                  - Comparison with previous periods (if requested)
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
  /api/v2/applications:
    get:
      tags:
        - Applications
      summary: Get applications (V2)
      description: Retrieve user's job applications with enhanced tracking (V2 API)
      operationId: getApplicationsV2
      security:
        - BearerAuth: []
      parameters:
        - name: status
          in: query
          description: Filter by application status
          schema:
            type: string
            enum:
              - saved
              - applied
              - interviewing
              - offered
              - rejected
              - accepted
              - archived
        - name: company_id
          in: query
          description: Filter by company ID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Applications retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                    company:
                      $ref: '#/components/schemas/Company'
                    jobs:
                      type: array
                      items:
                        $ref: '#/components/schemas/Job'
                    status:
                      type: string
                      enum:
                        - saved
                        - applied
                        - interviewing
                        - offered
                        - rejected
                        - accepted
                        - archived
                    ordering:
                      type: integer
                      description: Position in kanban board
                    deadline:
                      type: string
                      format: date-time
                      nullable: true
                    notes:
                      type: string
                    rating:
                      type: integer
                      minimum: 1
                      maximum: 5
                      nullable: true
                    hiring_score:
                      type: integer
                      minimum: 0
                      maximum: 100
                      nullable: true
                      description: AI-calculated hiring probability score
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
        '401':
          $ref: '#/components/responses/UnauthorizedError'
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Auth0 JWT token authentication
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for integration partners
  responses:
    UnauthorizedError:
      description: Failed to validate JWT token
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                enum:
                  - Failed to validate JWT token
                description: JWT token validation failed (expired, invalid, etc.)
            required:
              - error
    ForbiddenError:
      description: User does not have permission to access this resource
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Forbidden
              message:
                type: string
                example: Insufficient permissions
    NotFoundError:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Not found
              message:
                type: string
                example: The requested resource was not found
    ValidationError:
      description: Request validation failed
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Validation failed
              message:
                type: string
                example: One or more fields are invalid
              details:
                type: array
                items:
                  type: object
                  properties:
                    field:
                      type: string
                    message:
                      type: string
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalServerError'
    JSONValidationFailedError:
      description: Failed to parse request body to JSON schema
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JSONValidationFailedError'
    IDValidationFailedError:
      description: Failed to parse ID as UUID
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IDValidationFailedError'
  parameters:
    UserIDPath:
      name: userID
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: User ID
    CompanyIDPath:
      name: id
      in: path
      required: true
      description: Company ID
      schema:
        type: string
        format: uuid
    JobIDPath:
      name: id
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: Job ID
    ContactIDPath:
      name: id
      in: path
      required: true
      description: Contact ID
      schema:
        type: string
        format: uuid
    EventIDPath:
      name: eventId
      in: path
      required: true
      description: Unique identifier for the event
      schema:
        type: string
        format: uuid
    UniversityIDPath:
      name: universityID
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: University ID
    Limit:
      name: limit
      in: query
      description: Maximum number of results to return
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
    Offset:
      name: offset
      in: query
      description: Number of results to skip (for pagination)
      schema:
        type: integer
        minimum: 0
        default: 0
  schemas:
    InternalServerError:
      type: object
      properties:
        error:
          type: string
          enum:
            - An internal server error has occurred
          description: Internal server error message
      required:
        - error
    User:
      type: object
      properties:
        id:
          type: string
          description: The unique identifier for the user.
        first_name:
          type: string
          description: The user's first name.
        last_name:
          type: string
          description: The user's last name.
        email:
          type: string
          description: The user's email address.
        linkedin_slug:
          type: string
          description: The slug part of the user's LinkedIn profile.
        linkedin_urn:
          type: string
          description: The URN part of the user's LinkedIn profile, uniquely identifying the user on LinkedIn.
        linkedin_identifiers_updated_at:
          type: string
          format: date-time
          description: The timestamp when the LinkedIn identifiers were last updated.
        custom_fields:
          type: object
          additionalProperties: true
          description: |
            Institution-specific custom fields as key-value pairs. Any field sent in requests that is not part
            of the standard schema will be stored here and returned in responses.

            Example: `{"esade_program_track": "mba_fulltime", "preferred_industry": "consulting"}`
      required:
        - id
        - first_name
        - last_name
        - email
    JobInfo:
      type: object
      properties:
        title:
          type: string
          description: Job title
        linkedin_url:
          type: string
          format: uri
          description: LinkedIn URL
      required:
        - title
    Application:
      type: object
      properties:
        id:
          type: string
          description: Application ID
          example: ed96665b-211f-4a03-a5ca-cd4ac2d74647
        status:
          type: string
          enum:
            - saved
            - networking
            - applying
            - applied
            - interviewing
            - offer
            - archive
          description: Application status
        ordering:
          type: integer
          description: Tile position on Kanban board.
        company_id:
          type: string
          description: Company ID
          example: 04a32379-f2fa-43cb-902f-5f0033677dfa
        company_name:
          type: string
          description: Company name
          example: Google
        industry:
          type: string
          description: Industry
        logo_url:
          type: string
          format: uri
          description: Logo URL
        linkedin_url:
          type: string
          format: uri
          description: LinkedIn URL
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobInfo'
          description: List of jobs associated with the application
        updated_at:
          type: string
          format: date-time
          description: Time of last update (create, status change) of application tile.
      required:
        - status
        - company_id
        - company_name
        - industry
        - logo_url
        - linkedin_url
        - jobs
    Student:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Student ID
          example: 61c99bca-0680-4756-ab9e-7d0f24565eee
        first_name:
          type: string
          description: Student first name
          example: Alex
        last_name:
          type: string
          description: Student last name
          example: Naidiuk
        email:
          type: string
          format: email
          description: Student email
          example: alek.naidiuk@gmail.com
        role:
          type: string
          description: Student role
        university_id:
          type: string
          format: uuid
          example: 51a16608-fdb9-4675-a8c3-9bc8c15710bb
        applications:
          type: array
          items:
            $ref: '#/components/schemas/Application'
    Company:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Company ID
        name:
          type: string
          description: Company name
        short_description:
          type:
            - 'null'
            - string
          description: Short description of the company
        overview:
          type: string
          description: Company overview
        hq_location:
          type: string
          description: Headquarters location of the company
        company_size:
          type: string
          description: Company size
        company_url:
          type: string
          format: uri
          description: Company website URL
        logo_url:
          type: string
          format: uri
          description: URL of the company's logo
        linkedin_url:
          type: string
          format: uri
          description: LinkedIn profile URL of the company
        twitter_url:
          type:
            - 'null'
            - string
          format: uri
          description: Twitter profile URL of the company
        industry:
          type: string
          description: Industry of the company as on LinkedIn
        careeros_industry:
          type:
            - 'null'
            - string
          description: Industry of the company as on CareerOs
        application_id:
          type:
            - 'null'
            - string
          format: uuid
          description: ID of the associated application (if any)
        application_status:
          type:
            - 'null'
            - string
          description: Status of the associated application (if any)
        source:
          type:
            - 'null'
            - string
          description: Source of the company information
        tags:
          type: array
          items:
            type: string
          description: Tags associated with the company
      required:
        - name
        - overview
        - size
        - url
        - logo_url
        - linkedin_url
        - industry
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: Error message
      required:
        - error
    JSONValidationFailedError:
      type: object
      properties:
        error:
          type: string
          enum:
            - The supplied JSON is not correctly formatted
          description: Failed to bind request body to JSON schema
      required:
        - error
    CompanySearchFields:
      type: object
      properties:
        name:
          type: string
          description: The name of the target company
        linkedin_slug:
          type: string
          description: |
            The LinkedIn slug of the target company (the part of the LinkedIn URL after the last slash, 
            e.g. 'google' for https://www.linkedin.com/company/google/)
      required:
        - name
        - linkedin_slug
    Job:
      type: object
      properties:
        id:
          type: string
          description: Job ID
        company_id:
          type: string
          format: uuid
          description: ID of the company associated with the job
        title:
          type: string
          description: Job title
        location:
          type: string
          description: Job location
        description:
          type: string
          description: Job description
        note:
          type: string
          description: Additional note for the job
        linkedin_url:
          type: string
          format: uri
          description: LinkedIn URL of the job posting
        source:
          type: string
          description: Source of the job posting
      required:
        - title
        - location
        - description
        - linkedin_url
        - source
    CompanyWithJobs:
      type: object
      properties:
        application_id:
          type: string
        application_status:
          type: string
        careeros_industry:
          type: string
          example: Tech
        company_size:
          type: string
          example: 2-10 employees
        company_url:
          type: string
        hq_location:
          type: string
          example: Barcelona, Spain
        id:
          type: string
        industry:
          type: string
          example: Software Development
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/Job'
        linkedin_url:
          type: string
        logo_url:
          type: string
        name:
          type: string
          example: Career OS
        overview:
          type: string
        short_description:
          type: string
        source:
          type: string
          example: ChromeExtension
        tags:
          type: array
          items:
            type: string
        twitter_url:
          type: string
      required:
        - company_size
        - company_url
        - industry
        - linkedin_url
        - logo_url
        - name
        - overview
    IDValidationFailedError:
      type: object
      properties:
        error:
          type: string
          enum:
            - The supplied ID format is invalid
          description: ID validation failed (not UUID)
      required:
        - error
    NotFoundError:
      type: object
      properties:
        error:
          type: string
          description: Error message
          example: 'Entity with id: 1 not found'
      required:
        - error
    JobWithCompanyName:
      type: object
      properties:
        company_id:
          type: string
        company_name:
          type: string
          example: Career OS
        description:
          type: string
          example: Bachelor's degree or equivalent practical experience
        id:
          type: string
        linkedin_url:
          type: string
          example: https://www.linkedin.com/jobs/search/?currentJobId=123456
        location:
          type: string
          example: Barcelona, Spain
        note:
          type: string
        source:
          type: string
          example: ChromeExtension
        title:
          type: string
          example: Cloud Engineer
        deadline:
          type: string
          format: date-time
          description: The field reflects the Applicaton deadline provided by the user.
        rolling_date:
          type: boolean
        posted_on:
          type: string
          format: date-time
          description: The field contains the date when a job was posted.
      required:
        - company_name
        - description
        - linkedin_url
        - location
        - source
        - title
    JobPatch:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Job ID
        deadline:
          type: string
          format: date-time
          description: The field reflects the Applicaton deadline provided by the user.
        rolling_date:
          type: boolean
    CurrentPosition:
      type: object
      properties:
        id:
          type: string
          description: Current position ID
        title:
          type: string
          description: Title of the current position
        company:
          type: string
          description: Company of the current position
        location:
          type: string
          description: Location of the current position
        company_id:
          type:
            - 'null'
            - string
          format: uuid
          description: ID of the company of the current position
    Contact:
      type: object
      properties:
        id:
          type: string
          description: Contact ID
        first_name:
          type: string
          description: First name of the contact
        last_name:
          type: string
          description: Last name of the contact
        email:
          type: string
          description: Email address of the contact
        secondary_email:
          type: string
          description: Secondary email address of the contact
        phone:
          type: string
          description: Phone number of the contact
        current_position:
          $ref: '#/components/schemas/CurrentPosition'
        career_summary:
          type: object
          description: Career summary of the contact
        location:
          type: string
          description: Location of the contact
        linkedin_url:
          type: string
          format: uri
          description: LinkedIn profile URL of the contact
        linkedin_urn:
          type:
            - 'null'
            - string
          format: uri
          description: LinkedIn profile URN of the contact
        linkedin_connection_status:
          type: string
          enum:
            - connected
            - notConnected
            - pending
        is_active:
          type: boolean
          description: Indicates whether the contact is active or not
        source:
          type: string
          description: Source of the contact information
      required:
        - first_name
        - last_name
    Tile:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        ordering:
          type: integer
    Basics_location:
      type: object
      properties:
        address:
          type: string
          example: 2712 Broadway St
        postalCode:
          type: string
          example: CA 94115
        city:
          type: string
          example: San Francisco
        countryCode:
          type: string
          example: US
        region:
          type: string
          example: US
    Basics_profile:
      type: object
      properties:
        network:
          type: string
          example: Twitter
        username:
          type: string
          example: john
        url:
          type: string
          example: https://twitter.com/john
    Basics:
      type: object
      properties:
        name:
          type: string
          example: John Doe
        label:
          type: string
          example: Programmer
        image:
          type: string
          example: https://static.vecteezy.com/system/resources/previews/023/654/784/non_2x/golden-logo-template-free-png.png
        emails:
          type:
            - 'null'
            - array
          items:
            type: string
          example:
            - test@thecareeros.com
            - test@gmail.com
        phone_numbers:
          type:
            - 'null'
            - array
          items:
            type: string
          example:
            - +4 23 223 2313
            - '+380680223232'
        url:
          type: string
          example: '+380671234567'
        summary:
          type: string
          example: A summary of John Doe‚Ä¶
        location:
          type: object
          $ref: '#/components/schemas/Basics_location'
        work_permit:
          type:
            - 'null'
            - array
          items:
            type: string
        nationality:
          type:
            - 'null'
            - array
          items:
            type: string
        profiles:
          type: array
          items:
            $ref: '#/components/schemas/Basics_profile'
    Work:
      type: object
      properties:
        name:
          type: string
          example: Company
        position:
          type: string
          example: President
        url:
          type: string
          example: https://company.com
        startDate:
          type: string
          format: date
          example: '2013-01-01'
        endDate:
          type: string
          format: date
          example: '2014-01-01'
        summary:
          type: string
          example: Description‚Ä¶
        highlights:
          type: array
          items:
            type: string
          example:
            - Started the company
    Volunteer:
      type: object
      properties:
        organization:
          type: array
          items:
            type: string
          example: Organization
        position:
          type: string
          example: Senior
        url:
          type: string
          format: uri
          example: https://organization.com
        startDate:
          type: string
          format: date
          example: '2011-01-01'
        endDate:
          type: string
          format: date
          example: '2011-01-01'
        summary:
          type: string
          example: A brief summary or description of the volunteering experience.
        highlights:
          type: array
          items:
            type: string
          example: Example
    Education:
      type: object
      properties:
        institution:
          type: string
          example: University
        url:
          type: string
          format: uri
          example: https://institution.com
        area:
          type: string
          example: Software Development
        studyType:
          type: string
          example: Bachelor
        startDate:
          type: string
          format: date
          example: '2011-01-01'
        endDate:
          type: string
          format: date
          example: '2013-01-01'
        score:
          type: number
          format: float
          example: 4
        courses:
          type: array
          items:
            type: string
          example: React Native developer
    Award:
      type: object
      properties:
        title:
          type: string
          example: Award
        date:
          type: string
          format: date
          example: '2014-11-01'
        awarder:
          type: string
          example: Company
        summary:
          type: string
          example: There is no spoon.
    Certification:
      type: object
      properties:
        name:
          type: string
          example: Certification
        date:
          type: string
          format: date
          example: '2011-01-01'
        area:
          type: string
          example: Software Development
        issuer:
          type: string
          example: Company
        url:
          type: string
          format: uri
          example: https://institution.com
    Publication:
      type: object
      properties:
        name:
          type: string
          example: Publication
        publisher:
          type: string
          example: Company
        releaseDate:
          type: string
          format: date
          example: '2014-10-01'
        url:
          type: string
          format: uri
          example: https://institution.com
        summary:
          type: string
          example: Description‚Ä¶
    Skill:
      type: object
      properties:
        name:
          type: string
          example: Web Development
        level:
          type: string
          example: Company
        keywords:
          type: array
          items:
            type: string
            example: JavaScript
    Language:
      type: object
      properties:
        language:
          type: string
          example: English
        fluency:
          type: string
          example: Native speaker
    Interest:
      type: object
      properties:
        name:
          type: string
          example: Wildlife
        keywords:
          type: array
          items:
            type: string
            example: Ferrets
    Reference:
      type: object
      properties:
        name:
          type: string
          example: Jane Doe
        reference:
          type: string
          example: Reference‚Ä¶
    Project:
      type: object
      properties:
        name:
          type: string
          example: Project
        startDate:
          type: string
          format: date
          example: '2011-01-01'
        endDate:
          type: string
          format: date
          example: '2013-01-01'
        description:
          type: string
          example: Description...
        highlights:
          type: array
          items:
            type: string
          example:
            - Won award at AIHacks 2016
            - Won award at AIHacks 2017
        url:
          type: string
          format: uri
          example: https://project.com
    Additional_information:
      type: object
      properties:
        bullets:
          type:
            - 'null'
            - array
          items:
            type: string
          example:
            - Some information here
        gmatscore:
          type:
            - 'null'
            - string
          example: '305'
    Resume:
      type: object
      properties:
        basics:
          $ref: '#/components/schemas/Basics'
        work:
          type: array
          items:
            $ref: '#/components/schemas/Work'
        volunteer:
          type: array
          items:
            $ref: '#/components/schemas/Volunteer'
        education:
          type: array
          items:
            $ref: '#/components/schemas/Education'
        awards:
          type: array
          items:
            $ref: '#/components/schemas/Award'
        certifications:
          type: array
          items:
            $ref: '#/components/schemas/Certification'
        publications:
          type: array
          items:
            $ref: '#/components/schemas/Publication'
        skills:
          type: array
          items:
            $ref: '#/components/schemas/Skill'
        languages:
          type: array
          items:
            $ref: '#/components/schemas/Language'
        interests:
          type: array
          items:
            $ref: '#/components/schemas/Interest'
        references:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
        additional_information:
          $ref: '#/components/schemas/Additional_information'
    Resume_template:
      type: object
      properties:
        id:
          type: string
          example: 8de6cfbf-9cef-439a-91d3-1f93b91ce84a
        university_id:
          type: string
          format: uuid
          example: a4bd6f2b-fb4e-48ec-909d-42b71953f3ed
        name:
          type:
            - 'null'
            - string
          example: ESMT
        preview_image:
          type: string
          format: uri
          example: https://www.example.com/image.jpg
        created_at:
          type: string
          format: date
        updated_at:
          type: string
          format: date
    base_resume_response:
      type: object
      properties:
        id:
          type: string
          example: 5f994df8-3c0f-4eda-8bcf-db4aeb35d43f
        user_id:
          type: string
          example: 7d7f5b28-0c7c-4af9-8a15-e421e71ec39b
        preview_url:
          type: string
          example: https://placehold.co/100x500
        title:
          type: string
          example: My resume
        resume:
          $ref: '#/components/schemas/Resume'
        resume_template:
          $ref: '#/components/schemas/Resume_template'
        created_at:
          type: string
          format: date
        updated_at:
          type: string
          format: date
    UnauthorizedError:
      type: object
      properties:
        error:
          type: string
          enum:
            - Failed to validate JWT token
          description: JWT token validation failed (expired, invalid, etc.)
      required:
        - error
