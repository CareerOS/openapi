get:
  tags:
    - Jobs
  summary: Get Jobs
  description: Get a list of jobs
  operationId: getJobs
  parameters:
    - name: limit
      in: query
      description: The maximum number of jobs to retrieve
      required: true
      schema:
        type: integer
        minimum: 1
    - name: offset
      in: query
      description: The offset for pagination
      required: true
      schema:
        type: integer
        minimum: 0
  responses:
    '200':
      description: Successful operation
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: ../../components/schemas/Job.yaml
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/errors/ErrorResponse.yaml
    '401':
      $ref: ../../components/responses/UnauthorizedError.yaml
    '500':
      $ref: ../../components/responses/InternalServerError.yaml
post:
  tags:
    - Jobs
  summary: Save job
  description: Save a job to DB & for current user
  operationId: saveJob
  requestBody:
    description: Job's data from Chrome Extension
    content:
      application/json:
        schema:
          $ref: ../../components/schemas/JobWithCompanyName.yaml
    required: true
  responses:
    '201':
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    '400':
      $ref: ../../components/responses/JSONValidationFailedError.yaml
    '401':
      $ref: ../../components/responses/UnauthorizedError.yaml
    '404':
      description: Not found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
    '500':
      $ref: ../../components/responses/InternalServerError.yaml
delete:
  tags:
    - Jobs
  summary: Delete a job
  description: Soft delete a job for the current user.
  operationId: deleteUserJob
  parameters:
    - name: id
      in: path
      description: ID of the job to be deleted.
      required: true
      schema:
        type: string
        format: uuid
  responses:
    '200':
      description: Successfully deleted
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Success"
    '400':
      description: Bad request or Invalid ID format
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/errors/ErrorResponse.yaml
    '401':
      $ref: ../../components/responses/UnauthorizedError.yaml
    '500':
      $ref: ../../components/responses/InternalServerError.yaml
